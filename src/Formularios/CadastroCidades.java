/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastroCidades.java
 *
 * 
 * Created on 01/12/2013, 14:23:46
 */
package Formularios;

import Controle.CidadesDAO;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import modelo.Cidades;
import Banco.Conexao;
import java.awt.Color;
import java.awt.Point;
import java.sql.ResultSet;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author Abel
 */
public class CadastroCidades extends javax.swing.JFrame {
    
    Connection conexao;
   
    
    
    /**Este ResultSet é usado exclusivamente para armazenar o resultado da Query
     * "Select * from cidades", permitindo então, navegar ntre os registros
     * com os comando: .next e .previous
     * OBS: Tenho certeza que vc penso nisso, mais não pode ser aproveitado no método
     * PreencherTabela.
    **/
    ResultSet rst;

    String CheckRegistro = "";
    
    
    
   

    /** Creates new form CadastroCidades */
    public CadastroCidades() {
        initComponents();
        
       
        
        threadBtnOnTime.start();

        //Preenche a JTable
        Preencher_Jtable();
     
     
        
    }
    
   
    
    
    
    public void LimpaCampos(){
      
        dispose();
        new CadastroCidades().setVisible(true);
        
        
    }
    
    
    public void Filtrar_JTable()
    {
        TableRowSorter sorter = new TableRowSorter(JTableCidades.getModel());
        JTableCidades.setRowSorter(sorter);
        String texto = txtCidade.getText();
        
        try
        {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + texto));
            
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Valor não encontrado", "Aviso - Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
     public void Preencher_Jtable()
    {
        
  
      
     JTableCidades.getColumnModel().getColumn(0).setPreferredWidth(50); 
     JTableCidades.getColumnModel().getColumn(1).setPreferredWidth(50);
     JTableCidades.getColumnModel().getColumn(2).setPreferredWidth(50);  

     
     
     
     DefaultTableModel modelo = (DefaultTableModel)JTableCidades.getModel();
     modelo.setNumRows(0);
     
     try
     {
         
         this.conexao = Conexao.getConexao();
         String sql = "Select * from cidades";
         PreparedStatement ps = this.conexao.prepareStatement(sql);
         ResultSet rst;
         
         rst = ps.executeQuery();
         
         while (rst.next())
                modelo.addRow(new Object[]{rst.getString("ID"),
                                           rst.getString("Nome"),
                                           rst.getString("uf")});
         
     }
     catch (SQLException erro)
     {
         JOptionPane.showMessageDialog(null, "Erro ao listar na JTable" + erro);
     }    
    }
    


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        threadBtnOnTime = new org.netbeans.examples.lib.timerbean.Timer();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableCidades = new javax.swing.JTable();
        btnGravar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        txtCidade = new javax.swing.JTextField();
        cboUF = new javax.swing.JComboBox();
        txtID = new javax.swing.JTextField();

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel4.setText("Cadastro de Cidades");

        threadBtnOnTime.addTimerListener(new org.netbeans.examples.lib.timerbean.TimerListener() {
            public void onTime(java.awt.event.ActionEvent evt) {
                threadBtnOnTimeOnTime(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Cidades");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel1.setText("Código:");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel2.setText("Nome:");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel3.setText("UF:");

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        JTableCidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nome", "UF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTableCidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableCidadesMouseClicked(evt);
            }
        });
        JTableCidades.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTableCidadesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(JTableCidades);

        btnGravar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Gravar 22 x 22.png"))); // NOI18N
        btnGravar.setText("GRAVAR");
        btnGravar.setToolTipText("Este Botão Grava no Sistema");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Excluir 22 x 22.png"))); // NOI18N
        btnExcluir.setText("EXCLUIR");
        btnExcluir.setToolTipText("Este botão exclui o registro");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnNovo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Novo 22 x 22.png"))); // NOI18N
        btnNovo.setText("NOVO");
        btnNovo.setToolTipText("Este botão começa um novo resgistro");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        txtCidade.setToolTipText("");
        txtCidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCidadeMouseClicked(evt);
            }
        });
        txtCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCidadeActionPerformed(evt);
            }
        });
        txtCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCidadeKeyPressed(evt);
            }
        });

        cboUF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO", " " }));
        cboUF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboUFActionPerformed(evt);
            }
        });

        txtID.setEditable(false);
        txtID.setToolTipText("");
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addGap(4, 4, 4)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2)
                        .addGap(4, 4, 4)
                        .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboUF, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnNovo)
                        .addGap(6, 6, 6)
                        .addComponent(btnGravar)
                        .addGap(6, 6, 6)
                        .addComponent(btnExcluir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1))
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboUF, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGravar)
                    .addComponent(btnExcluir)
                    .addComponent(btnNovo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(415, 331));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
      
        Cidades cidades = new Cidades();
        CidadesDAO cidadesDAO = new CidadesDAO();
        cidades.setNome(txtCidade.getText());
        cidades.setUf(String.valueOf(cboUF.getSelectedItem()));
        
        if ("".equals(txtCidade.getText()))
        {
            btnGravar.setEnabled(false);
            JTableCidades.setVisible(false);
            
            if("".equals(txtCidade.getText()))
            {
                txtCidade.setText("Campo não preenchido");
                txtCidade.setForeground(Color.RED);
            }
            else if("Campo não preenchido".equals(txtCidade.getText()))
            {
                CheckRegistro = "'Campo não Preenchido'" + "\n" + "Não é um registro valido";               
            }
            if(!"".equals(CheckRegistro))
            {
                JOptionPane.showMessageDialog(null, CheckRegistro );
            }
        }
        else
        {
        try {
        if ("".equals(txtID.getText())){
           
            cidadesDAO.inserirDados(cidades);
            JOptionPane.showMessageDialog(null, "Cadastrado com sucesso");
           JTableCidades.setVisible(true);
              
        }else{
            
            cidades.setId(Integer.parseInt(txtID.getText()));
            cidadesDAO.atualizarDados(cidades);
            JOptionPane.showMessageDialog(null, "Atualizado com Sucesso");   
        }
        
        Preencher_Jtable();
       
        LimpaCampos();
    
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao cadastrar");
        }
        }
        
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        //Trata caso aconteça um erro
        
        if ("".equals(txtID.getText()))
        {
            JOptionPane.showMessageDialog(null, "Erro, nenhum registro selecionado");
        }
        
        else if (!"".equals(txtID.getText()))
        {
            
           int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir essa cidade?", "Excluir", JOptionPane.YES_NO_OPTION);
           if (resp == JOptionPane.YES_OPTION) 
           {
                try{
            
            Cidades cidades = new Cidades();
            cidades.setId(Integer.parseInt(txtID.getText()));
            
            CidadesDAO cidadesDAO = new CidadesDAO();
            cidadesDAO.deletarDados(cidades);
            JOptionPane.showMessageDialog(null, "Excluido com Sucesso");
            Preencher_Jtable();
            LimpaCampos();
            
        }catch(SQLException err){
            JOptionPane.showMessageDialog(null, "Erro ao excluir " + err);
        }catch(Exception err){
            JOptionPane.showMessageDialog(null, "Erro ao excluir " + err);
        }
           }     
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
       
        
        if (!"".equals(txtCidade.getText())){
            
        int resp =  JOptionPane.showConfirmDialog(null, "Deseja criar um registro novo ? ", "Novo", JOptionPane.YES_NO_OPTION);
            
            if (resp == JOptionPane.YES_OPTION){
               
                LimpaCampos();
            }//Fim Se
  
        }//Fim Se
    }//GEN-LAST:event_btnNovoActionPerformed

    private void threadBtnOnTimeOnTime(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threadBtnOnTimeOnTime
        // TODO add your handling code here:
        
        btnEditarAtualizar();
    }//GEN-LAST:event_threadBtnOnTimeOnTime

    private void JTableCidadesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTableCidadesKeyPressed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_JTableCidadesKeyPressed

    private void JTableCidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableCidadesMouseClicked
        // TODO add your handling code here:
         if(evt.getClickCount() == 2)
        {
            Point p = evt.getPoint();
            int row = JTableCidades.rowAtPoint(p);
            int col = JTableCidades.columnAtPoint(p);
            
            txtID.setText(String.valueOf(JTableCidades.getModel().getValueAt(row, 0)));
            txtCidade.setText(String.valueOf(JTableCidades.getModel().getValueAt(row, 1)));
            cboUF.setSelectedItem(String.valueOf(JTableCidades.getModel().getValueAt(row, 2)));
        }
         
    }//GEN-LAST:event_JTableCidadesMouseClicked

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void txtCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCidadeActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtCidadeActionPerformed

    private void txtCidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCidadeKeyPressed
        
        
        Filtrar_JTable();
    }//GEN-LAST:event_txtCidadeKeyPressed

    private void cboUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboUFActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_cboUFActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDKeyPressed

    private void txtCidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCidadeMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtCidade.getText()))
        {
            txtCidade.setText("");
            txtCidade.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);
            
        }
    }//GEN-LAST:event_txtCidadeMouseClicked

    
   
    //Este método atualiza o botão "Gravar" quando necessário para o botão "Atualizar"
    private void btnEditarAtualizar()
    {
        
        if (!"".equals(txtID.getText())){
            btnGravar.setText("ATUALIZAR");
        }
        
        else if ("".equals(txtCidade.getText())){
            btnGravar.setText("GRAVAR");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CadastroCidades().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTableCidades;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JComboBox cboUF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private org.netbeans.examples.lib.timerbean.Timer threadBtnOnTime;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
