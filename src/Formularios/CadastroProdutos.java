/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastroProdutos.java
 *
 * Created on 08/02/2014, 22:56:34
 */
package Formularios;

import Controle.ProdutosDAO;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import modelo.Produtos;
import Banco.Conexao;
import java.awt.Color;
import java.awt.Point;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.ParseException;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Formigao
 */
public class CadastroProdutos extends javax.swing.JFrame {

    Connection conexao;
    ResultSet rst;
   String CheckRegistro = "";
   
    DecimalFormat dc = new DecimalFormat("##,##0.00");
    
    
    /** Creates new form CadastroProdutos */
    public CadastroProdutos()
    {
        initComponents();
        
        txtProdutos.grabFocus();
        
        threadBtnOnTime.start();
        
           //Preenche a JTable
        Preencher_Jtable();
        
        consultarFornecedores();

        txtEstoque.setText("0");
            txtEstoqueMin.setText("0");
            txtValorCusto.setText("0");
            txtValorVenda.setText("0");
        
        
    }
    
          
    public void LimparCampos()
    {
       dispose();
       new  CadastroProdutos().setVisible(true);
       
        
    }
    
    
     public void Preencher_Jtable()
     {
        
  
      
     JTableProdutos.getColumnModel().getColumn(0).setPreferredWidth(50); 
     JTableProdutos.getColumnModel().getColumn(1).setPreferredWidth(100);
     JTableProdutos.getColumnModel().getColumn(2).setPreferredWidth(100);
     JTableProdutos.getColumnModel().getColumn(3).setPreferredWidth(100);
     JTableProdutos.getColumnModel().getColumn(4).setPreferredWidth(100);
     JTableProdutos.getColumnModel().getColumn(5).setPreferredWidth(100);
     JTableProdutos.getColumnModel().getColumn(6).setPreferredWidth(100);
     
     

     
     
     
     DefaultTableModel modelo = (DefaultTableModel)JTableProdutos.getModel();
     modelo.setNumRows(0);
     
     try
     {
         
         this.conexao = Conexao.getConexao();
         
         String sql = "Select pr.*, fo.Fantasia from produtos pr inner join fornecedores fo on pr.id_fornecedor = fo.id";
         PreparedStatement ps = this.conexao.prepareStatement(sql);
         ResultSet rst;
         
         rst = ps.executeQuery();
         
         while (rst.next())
                modelo.addRow(new Object[]{rst.getString("ID"),
                                           rst.getString("cod_barra"),
                                           rst.getString("Descricao"),
                                           rst.getString("Fantasia"),
                                           rst.getString("Estoque"),
                                           rst.getString("Estoque_min"),
                                           rst.getString("Valor_custo"),
                                           rst.getString("Valor_Venda")});
         
     }
     catch (SQLException erro)
     {
         JOptionPane.showMessageDialog(null, "Erro ao listar na JTable" + erro);
     }    
     }
     
     //Rotina que toda vez que abre o form, inicia-se com o primeiro registro
   
            
      
    
    
       
    private void btnEditarAtualizar()
    {
        
        if (!"".equals(txtID.getText())){
            btnGravar.setText("ATUALIZAR");
        }
        
        else if ("".equals(txtProdutos.getText())){
            btnGravar.setText("GRAVAR");
        }
    }
    
 
    private void consultarFornecedores()
       {
           try
           {
              this.conexao = Conexao.getConexao();
              String sql = "Select razao_social from fornecedores";
              PreparedStatement ps = this.conexao.prepareStatement(sql);
              ResultSet rsts = ps.executeQuery();
              while(rsts.next())
              
              cboFornecedor.addItem(rsts.getString("razao_social"));
              
           }
           catch (SQLException erro)
           {
               
           }
       }
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        threadBtnOnTime = new org.netbeans.examples.lib.timerbean.Timer();
        btnExcluir = new javax.swing.JButton();
        btnGravar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableProdutos = new javax.swing.JTable();
        txtProdutos = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboFornecedor = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtEstoque = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEstoqueMin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtValorCusto = new javax.swing.JTextField();
        txtValorVenda = new javax.swing.JTextField();
        txtIDFornecedor = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCodBarra = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        threadBtnOnTime.addTimerListener(new org.netbeans.examples.lib.timerbean.TimerListener() {
            public void onTime(java.awt.event.ActionEvent evt) {
                threadBtnOnTimeOnTime(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Produtos");
        setResizable(false);

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Excluir 22 x 22.png"))); // NOI18N
        btnExcluir.setText("EXCLUIR");
        btnExcluir.setToolTipText("Este botão exclui o registro");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnGravar.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Gravar 22 x 22.png"))); // NOI18N
        btnGravar.setText("GRAVAR");
        btnGravar.setToolTipText("Este Botão Grava no Sistema");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnNovo.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Novo 22 x 22.png"))); // NOI18N
        btnNovo.setText("NOVO");
        btnNovo.setToolTipText("Este botão começa um novo resgistro");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel2.setText("Nome:");

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel1.setText("Código:");

        JTableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Cod Barras", "Nome", "Fornecedor", "Estoque", "Estoque Minimo", "Valor Custo", "Valor Venda"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTableProdutos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        JTableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTableProdutos);

        txtProdutos.setToolTipText("");
        txtProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtProdutosMouseClicked(evt);
            }
        });
        txtProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProdutosActionPerformed(evt);
            }
        });
        txtProdutos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProdutosKeyPressed(evt);
            }
        });

        txtID.setEditable(false);
        txtID.setToolTipText("");
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel4.setText(" Estoque Atual:");

        cboFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFornecedorActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel5.setText("Fornecedor:");

        txtEstoque.setToolTipText("");
        txtEstoque.setEnabled(false);
        txtEstoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEstoqueMouseClicked(evt);
            }
        });
        txtEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstoqueActionPerformed(evt);
            }
        });
        txtEstoque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEstoqueKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel6.setText(" Estoque min:");

        txtEstoqueMin.setToolTipText("");
        txtEstoqueMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEstoqueMinMouseClicked(evt);
            }
        });
        txtEstoqueMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstoqueMinActionPerformed(evt);
            }
        });
        txtEstoqueMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEstoqueMinKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel7.setText(" Valor Custo:");

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel8.setText(" Valor Venda:");

        txtValorCusto.setToolTipText("");
        txtValorCusto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtValorCustoMouseClicked(evt);
            }
        });
        txtValorCusto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorCustoActionPerformed(evt);
            }
        });
        txtValorCusto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorCustoKeyPressed(evt);
            }
        });

        txtValorVenda.setToolTipText("");
        txtValorVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtValorVendaMouseClicked(evt);
            }
        });
        txtValorVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorVendaActionPerformed(evt);
            }
        });
        txtValorVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorVendaKeyPressed(evt);
            }
        });

        txtIDFornecedor.setEditable(false);
        txtIDFornecedor.setToolTipText("");
        txtIDFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDFornecedorActionPerformed(evt);
            }
        });
        txtIDFornecedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDFornecedorKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel9.setText("Cod Barra:");

        txtCodBarra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCodBarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodBarraActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Usar somente (,)  para separar centavos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProdutos))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodBarra))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIDFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboFornecedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEstoque))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtValorVenda))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtValorCusto))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEstoqueMin, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGravar, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtIDFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtEstoqueMin, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtValorCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(txtCodBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(txtValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(3, 3, 3)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(677, 330));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed

     if (!"".equals(txtProdutos.getText()))
     {
         int resp =  JOptionPane.showConfirmDialog(null, "Deseja criar um registro novo ? ", "Novo", JOptionPane.YES_NO_OPTION);
            if (resp == JOptionPane.YES_OPTION)
            { 
                LimparCampos();
            }
           
     }
        
        
       
}//GEN-LAST:event_btnNovoActionPerformed

    private void threadBtnOnTimeOnTime(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threadBtnOnTimeOnTime

        // TODO add your handling code here:
        
        btnEditarAtualizar();
    }//GEN-LAST:event_threadBtnOnTimeOnTime

    private void txtProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProdutosActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtProdutosActionPerformed

    private void txtProdutosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdutosKeyPressed
        
        
        FiltrarJTable();
    }//GEN-LAST:event_txtProdutosKeyPressed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDKeyPressed

    private void cboFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFornecedorActionPerformed
        // TODO add your handling code here:
               try
        {
            this.conexao = Conexao.getConexao();
            String sql = "Select id from fornecedores where razao_social = ?";
            PreparedStatement ps = this.conexao.prepareStatement(sql);
            ps.setString(1, String.valueOf(cboFornecedor.getSelectedItem()));
            ResultSet rsts = ps.executeQuery();
            rsts.next();
 
            txtIDFornecedor.setText(rsts.getString("id"));
       
            
            
        }
        catch (SQLException ERRO)
        {
          
        }
}//GEN-LAST:event_cboFornecedorActionPerformed

    private void txtEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstoqueActionPerformed

    private void txtEstoqueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstoqueKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstoqueKeyPressed

    private void txtEstoqueMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstoqueMinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstoqueMinActionPerformed

    private void txtEstoqueMinKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstoqueMinKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstoqueMinKeyPressed

    private void JTableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableProdutosMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2) {
            Point p = evt.getPoint();
            int row = JTableProdutos.rowAtPoint(p);
            int col = JTableProdutos.columnAtPoint(p);
            
            txtID.setText(String.valueOf(JTableProdutos.getModel().getValueAt(row, 0)));
            txtCodBarra.setText(String.valueOf(JTableProdutos.getModel().getValueAt(row, 1)));
            txtProdutos.setText(String.valueOf(JTableProdutos.getModel().getValueAt(row, 2)));
            cboFornecedor.setSelectedItem(String.valueOf(JTableProdutos.getModel().getValueAt(row, 3)));
            txtEstoque.setText(String.valueOf(JTableProdutos.getModel().getValueAt(row,4)));
            txtEstoqueMin.setText(String.valueOf(JTableProdutos.getModel().getValueAt(row,5)));
            txtValorCusto.setText(dc.format(Double.parseDouble(String.valueOf(JTableProdutos.getModel().getValueAt(row,6)))));
            txtValorVenda.setText(dc.format(Double.parseDouble(String.valueOf(JTableProdutos.getModel().getValueAt(row,7)))));
            
            this.conexao = Conexao.getConexao();
            try
            {
                String sql = "select razao_social from fornecedores where id =?";
                PreparedStatement ps = this.conexao.prepareStatement(sql);
                ps.setInt(1, Integer.parseInt(txtIDFornecedor.getText()));
                ResultSet rsts = ps.executeQuery();
               
                rsts.next();
                
                cboFornecedor.setSelectedItem(rsts.getString("razao_social"));
                
            }
            catch(SQLException erro)
            {
                JOptionPane.showMessageDialog(null, erro);
            }
            
        }
        
    }//GEN-LAST:event_JTableProdutosMouseClicked

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        
      
        Produtos produtos = new Produtos();
        ProdutosDAO produtosDAO = new ProdutosDAO();
        try{
        
        
        produtos.setCod_barra(txtCodBarra.getText());
        produtos.setDescricao(txtProdutos.getText());
        produtos.setId_fornecedor(Integer.parseInt(txtIDFornecedor.getText()));
        produtos.setEstoque(Integer.parseInt(txtEstoque.getText()));
        produtos.setEstoque_min(Integer.parseInt(txtEstoqueMin.getText()));
        produtos.setValor_custo(Double.parseDouble(String.valueOf(dc.parse(txtValorCusto.getText()))));
        produtos.setValor_venda(Double.parseDouble(String.valueOf(dc.parse(txtValorVenda.getText()))));
        
        }
        
                
        catch(ParseException ERRO)
        {
            JOptionPane.showMessageDialog(null, ERRO);
        }
        if ("".equals(txtProdutos.getText()) || "".equals(txtEstoque.getText()) || "".equals(txtEstoqueMin.getText()) ||
            "".equals(txtValorCusto.getText()) || "".equals(txtValorVenda.getText()))
        {
            btnGravar.setEnabled(false);
            JTableProdutos.setVisible(false);
            
            
            if("".equals(txtProdutos.getText()))
            {
                txtProdutos.setText("Campo não preenchido");
                txtProdutos.setForeground(Color.RED);
            }
            else if("Campo não preenchido".equals(txtProdutos.getText()))
            {
                CheckRegistro = "'Campo não Preenchido'" + "\n" + "Não é um registro valido";              
            }
            
            if(!"".equals(CheckRegistro))
            {
                JOptionPane.showMessageDialog(null, CheckRegistro );
            }
            
        } 
        else
        {
        
        
            try
            {
                if ("".equals(txtID.getText()))
                {
                    produtosDAO.inserirDados(produtos);
                    JOptionPane.showMessageDialog(null, "Cadastrado com sucesso");
                    JTableProdutos.setVisible(true);
                }
                else
                { 
                    produtos.setId(Integer.parseInt(txtID.getText()));
                    produtosDAO.atualizarDados(produtos);
                    JOptionPane.showMessageDialog(null, "Atualizado com Sucesso");
                }
                
                Preencher_Jtable();
 
                LimparCampos();
                
            } 
            catch (SQLException ex)
            {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar " + ex);
            }
        
        }
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        
        //Trata caso aconteça um erro
        
        if ("".equals(txtID.getText())) {
            JOptionPane.showMessageDialog(null, "Erro, nenhum registro selecionado");
        }
        
        else if (!"".equals(txtID.getText())) {
            
            int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir esse produto?", "Excluir", JOptionPane.YES_NO_OPTION);
            if (resp == JOptionPane.YES_OPTION) {
                try{
                    
                    Produtos produtos = new Produtos();
                    produtos.setId(Integer.parseInt(txtID.getText()));
                    
                    ProdutosDAO produtosDAO = new ProdutosDAO();
                    produtosDAO.deletarDados(produtos);
                    JOptionPane.showMessageDialog(null, "Excluido com Sucesso");
                    Preencher_Jtable();
                    LimparCampos();
                    
                }catch(SQLException err){
                    JOptionPane.showMessageDialog(null, "Erro ao excluir " + err);
                }catch(Exception err){
                    JOptionPane.showMessageDialog(null, "Erro ao excluir " + err);
                }
            }
        }
        
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void txtValorCustoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorCustoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorCustoActionPerformed

    private void txtValorCustoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorCustoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorCustoKeyPressed

    private void txtValorVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorVendaActionPerformed

    private void txtValorVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorVendaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorVendaKeyPressed

    private void txtIDFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDFornecedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDFornecedorActionPerformed

    private void txtIDFornecedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDFornecedorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDFornecedorKeyPressed

    private void txtProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtProdutosMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtProdutos.getText()))
        {
            txtProdutos.setText("");
            txtProdutos.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);  
        }
    }//GEN-LAST:event_txtProdutosMouseClicked

    private void txtEstoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEstoqueMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtEstoque.getText()))
        {
            txtEstoque.setText("");
            txtEstoque.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);  
        }
    }//GEN-LAST:event_txtEstoqueMouseClicked

    private void txtEstoqueMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEstoqueMinMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtEstoqueMin.getText()))
        {
            txtEstoqueMin.setText("");
            txtEstoqueMin.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);  
        }
    }//GEN-LAST:event_txtEstoqueMinMouseClicked

    private void txtValorCustoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtValorCustoMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtValorCusto.getText()))
        {
            txtValorCusto.setText("");
            txtValorCusto.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);  
        }
    }//GEN-LAST:event_txtValorCustoMouseClicked

    private void txtValorVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtValorVendaMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtValorVenda.getText()))
        {
            txtValorVenda.setText("");
            txtValorVenda.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);  
        }
    }//GEN-LAST:event_txtValorVendaMouseClicked

    private void txtCodBarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodBarraActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtCodBarraActionPerformed

    private void FiltrarJTable()
    {
        TableRowSorter sorter = new TableRowSorter(JTableProdutos.getModel());
        JTableProdutos.setRowSorter(sorter);
        String texto = txtProdutos.getText();
        
        try
        {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + texto));
            
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Valor não encontrado", "Aviso - Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CadastroProdutos().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTableProdutos;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JComboBox cboFornecedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private org.netbeans.examples.lib.timerbean.Timer threadBtnOnTime;
    private javax.swing.JTextField txtCodBarra;
    private javax.swing.JTextField txtEstoque;
    private javax.swing.JTextField txtEstoqueMin;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIDFornecedor;
    private javax.swing.JTextField txtProdutos;
    private javax.swing.JTextField txtValorCusto;
    private javax.swing.JTextField txtValorVenda;
    // End of variables declaration//GEN-END:variables
}
