/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastroServiços.java
 *
 * Created on 27/01/2014, 19:56:32
 */
package Formularios;

import java.sql.Connection;
import Banco.Conexao;
import Controle.ServicosDAO;
import java.awt.Color;
import java.awt.Point;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelo.Servicos;

/**
 *
 * @author Abel
 */
public class CadastroServicos extends javax.swing.JFrame {
    
    Connection conexao;
    ResultSet rst;
    DecimalFormat formatar = new DecimalFormat("##0.00");
      String CheckRegistro = "";

    /** Creates new form CadastroServiços */
    public CadastroServicos() {
        initComponents();
        
        PreencherJTable();
        threadBtnOnTime.start();
        

        
       
        
    }
    
    
       
        private void FiltrarJTable()
    {
        TableRowSorter sorter = new TableRowSorter(JTableServicos.getModel());
        JTableServicos.setRowSorter(sorter);
        String texto = txtDescricao.getText();
        
        
        try
        {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + texto));
            
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Valor não encontrado", "Aviso - Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    private void PreencherJTable(){
        
     JTableServicos.getColumnModel().getColumn(0).setPreferredWidth(100); 
     JTableServicos.getColumnModel().getColumn(1).setPreferredWidth(100);
     JTableServicos.getColumnModel().getColumn(2).setPreferredWidth(100);
        
     DefaultTableModel modelo = (DefaultTableModel)JTableServicos.getModel();
     modelo.setNumRows(0);
     
     try{
         
         this.conexao = Conexao.getConexao();
         String sql = "Select * from servicos";
         PreparedStatement ps = this.conexao.prepareStatement(sql);
         ResultSet rst = ps.executeQuery();
         
         while(rst.next())
             modelo.addRow(new Object[]{rst.getString("id"),
                            rst.getString("Descricao"),
                            rst.getString("vlr_unit")});
            
         
         
     }catch(SQLException err){
         JOptionPane.showMessageDialog(null, "Erro de SQL " + err);
     }catch(Exception err){
         JOptionPane.showMessageDialog(null, "Erro de Exception" + err);
     }//Fim Try Cacth
     
    }//Fim PreencherJTable
    
   
    
    private void LimparCampos(){
        
        txtID.setText("");
        txtDescricao.setText("");
        txtVlrUnit.setText("");
        dispose();
        new CadastroServicos().setVisible(true);
    }
    
    
     private void btnEditarAtualizar()
    {
        
        if (!"".equals(txtID.getText())){
            btnGravar.setText("ATUALIZAR");
        }
        
        else if ("".equals(txtDescricao.getText())){
            btnGravar.setText("GRAVAR");
        }
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        threadBtnOnTime = new org.netbeans.examples.lib.timerbean.Timer();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnGravar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableServicos = new javax.swing.JTable();
        txtDescricao = new javax.swing.JTextField();
        txtVlrUnit = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        threadBtnOnTime.addTimerListener(new org.netbeans.examples.lib.timerbean.TimerListener() {
            public void onTime(java.awt.event.ActionEvent evt) {
                threadBtnOnTimeOnTime(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Serviços");
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel2.setText("Código:");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel3.setText("Descrição:");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel4.setText("Preço Unitário:");

        btnGravar.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Gravar 22 x 22.png"))); // NOI18N
        btnGravar.setText("GRAVAR");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnNovo.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Novo 22 x 22.png"))); // NOI18N
        btnNovo.setText("NOVO");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Excluir 22 x 22.png"))); // NOI18N
        btnExcluir.setText("EXCLUIR");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        JTableServicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Descrição", "Preço Unitário"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTableServicos.getTableHeader().setReorderingAllowed(false);
        JTableServicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableServicosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTableServicos);

        txtDescricao.setToolTipText("");
        txtDescricao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDescricaoMouseClicked(evt);
            }
        });
        txtDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescricaoActionPerformed(evt);
            }
        });
        txtDescricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescricaoKeyPressed(evt);
            }
        });

        txtVlrUnit.setToolTipText("");
        txtVlrUnit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtVlrUnitMouseClicked(evt);
            }
        });
        txtVlrUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVlrUnitActionPerformed(evt);
            }
        });
        txtVlrUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtVlrUnitKeyPressed(evt);
            }
        });

        txtID.setEditable(false);
        txtID.setToolTipText("");
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Usar somente (,)  para separar centavos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGravar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtVlrUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel4))
                    .addComponent(txtVlrUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNovo, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGravar, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addGap(9, 9, 9)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(558, 305));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
     
        ServicosDAO servicosDAO = new ServicosDAO();
        Servicos servicos = new Servicos();
    
        
        
        if ("".equals(txtDescricao.getText()) || ("".equals(txtVlrUnit.getText())))
        {
            btnGravar.setEnabled(false);
            JTableServicos.setVisible(false);
            
            
            if("".equals(txtDescricao.getText()))
            {
                txtDescricao.setText("Campo não preenchido");
                txtDescricao.setForeground(Color.RED);
            }
            else if("Campo não preenchido".equals(txtDescricao.getText()))
            {
                CheckRegistro = "'Campo não Preenchido'" + "\n" + "Não é um registro valido";              
            }
             if("".equals(txtVlrUnit.getText()))
            {
                txtVlrUnit.setText("Campo não preenchido");
                txtVlrUnit.setForeground(Color.RED);
            }
            else if("Campo não preenchido".equals(txtVlrUnit.getText()))
            {
                CheckRegistro = "'Campo não Preenchido'" + "\n" + "Não é um registro valido";              
            }
            if(!"".equals(CheckRegistro))
            {
                JOptionPane.showMessageDialog(null, CheckRegistro );
            }
        }
        else
        {
        
        
        try{
            
            
             
            servicos.setDescricao(txtDescricao.getText());
            String moeda = String.valueOf(formatar.parse(txtVlrUnit.getText()));
            Double valor = Double.parseDouble(moeda);
            servicos.setVlr_unit(valor);
            
            
           
  
            
            if("".equals(txtID.getText())){           
       
             
            servicosDAO.insereDados(servicos);
            JOptionPane.showMessageDialog(null, "Cadastrado com Sucesso");
            JTableServicos.setVisible(true);
            }else{
                
            servicos.setId(Integer.parseInt(txtID.getText()));
            servicosDAO.atualizaDados(servicos);
            JOptionPane.showMessageDialog(null, "Atualizado com Sucesso");
              
            }//FIM SE
            
            PreencherJTable();
        
            LimparCampos();

        }catch(SQLException err){
            JOptionPane.showMessageDialog(null, "Erro de SQL " + err);
        }catch(Exception err){
            
        }//Fim Try Cacth
        
    
        }
        
        
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        
        try{
            
            if (!"".equals(txtID.getText())){
                
               int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir este resgistro ?", "Excluir", JOptionPane.YES_NO_OPTION);
                
                    if(resp == JOptionPane.YES_OPTION){
                        
                                   Servicos servicos = new Servicos();
        servicos.setId(Integer.parseInt(txtID.getText()));
        
        
        ServicosDAO servicosDAO = new ServicosDAO();
        servicosDAO.excluirDados(servicos);
        JOptionPane.showMessageDialog(null, "Excluido com Sucesso !!!");
        PreencherJTable();
        LimparCampos();
        
                        
                    }//FIM SE
                
     
                
            }//Fim SE

        }catch(SQLException err){
            JOptionPane.showMessageDialog(null, "Erro de SQL " + err);
        }//Fim Try Cacth
        
        
        
              
        
        
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        if (!"".equals(txtDescricao.getText())){
            
            int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente criar um registro novo ?", "Novo", JOptionPane.YES_NO_OPTION);
            
                if (resp == JOptionPane.YES_OPTION){
                    
                    LimparCampos();
                    
                }
            
        }
    }//GEN-LAST:event_btnNovoActionPerformed

    private void threadBtnOnTimeOnTime(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threadBtnOnTimeOnTime
        // TODO add your handling code here:
        btnEditarAtualizar();
        
    }//GEN-LAST:event_threadBtnOnTimeOnTime

    private void JTableServicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableServicosMouseClicked
        // TODO add your handling code here:
           if(evt.getClickCount() == 2)
        {
            Point p = evt.getPoint();
            int row = JTableServicos.rowAtPoint(p);
            int col = JTableServicos.columnAtPoint(p);
            
            txtID.setText(String.valueOf(JTableServicos.getModel().getValueAt(row, 0)));
            txtDescricao.setText(String.valueOf(JTableServicos.getModel().getValueAt(row, 1)));
            txtVlrUnit.setText(formatar.format(Double.valueOf(String.valueOf(JTableServicos.getModel().getValueAt(row, 2)))));
        }
        
        
        
        
    }//GEN-LAST:event_JTableServicosMouseClicked

    private void txtDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescricaoActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtDescricaoActionPerformed

    private void txtDescricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescricaoKeyPressed
        
        
        FiltrarJTable();
}//GEN-LAST:event_txtDescricaoKeyPressed

    private void txtVlrUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVlrUnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVlrUnitActionPerformed

    private void txtVlrUnitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVlrUnitKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVlrUnitKeyPressed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDKeyPressed

    private void txtDescricaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDescricaoMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtDescricao.getText()))
        {
            txtDescricao.setText("");
            txtDescricao.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);  
        }
    }//GEN-LAST:event_txtDescricaoMouseClicked

    private void txtVlrUnitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtVlrUnitMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtVlrUnit.getText()))
        {
            txtVlrUnit.setText("");
            txtVlrUnit.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);  
        }
    }//GEN-LAST:event_txtVlrUnitMouseClicked

   
      
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CadastroServicos().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTableServicos;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private org.netbeans.examples.lib.timerbean.Timer threadBtnOnTime;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtVlrUnit;
    // End of variables declaration//GEN-END:variables
}
