/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmContasReceber.java
 *
 * Created on 17/03/2014, 15:52:43
 */
package Formularios;

import Banco.Conexao;
import Controle.ContasReceberDAO;
import Relatorios.GeraRelatorio;

import java.awt.Point;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.ContasReceber;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Abel
 */
public class FrmContasReceber extends javax.swing.JFrame {
    
    Connection conexao;
    DecimalFormat df = new DecimalFormat("##,##0.00");
    
    //Formata a data para o padão brasil
    DateFormat datefor = new SimpleDateFormat("dd/MM/yyyy");
    
  
            
    int id_venda, nparc; //Atributo usado para armazenar o id da venda
    double vlrDesc, vlrJuros; //Atributo usado para armazenar o valor do desconto
   
 
    
    

    /** Creates new form FrmContasReceber */
    public FrmContasReceber() {
        initComponents();
    

        carregarCBOClientes();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cboClientes = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableContas = new javax.swing.JTable();
        btnBaixarParcs = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtJuros = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cboTipoPgto = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        txtDesconto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtValorParc = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtNParc = new javax.swing.JTextField();
        btnRelatorio = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtValorFinal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Contas à Receber");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 24));
        jLabel1.setText("ID:");

        txtID.setFont(new java.awt.Font("SansSerif", 0, 24));
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 24));
        jLabel2.setText("Cliente:");

        cboClientes.setFont(new java.awt.Font("SansSerif", 0, 24));
        cboClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboClientesActionPerformed(evt);
            }
        });

        JTableContas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Venda", "Nome", "Data Venda", "Parcela", "Valor", "Juros", "Data Vencimento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTableContas.setShowHorizontalLines(false);
        JTableContas.setShowVerticalLines(false);
        JTableContas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableContasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTableContas);
        if (JTableContas.getColumnModel().getColumnCount() > 0) {
            JTableContas.getColumnModel().getColumn(0).setResizable(false);
            JTableContas.getColumnModel().getColumn(1).setResizable(false);
            JTableContas.getColumnModel().getColumn(2).setResizable(false);
            JTableContas.getColumnModel().getColumn(3).setResizable(false);
            JTableContas.getColumnModel().getColumn(4).setResizable(false);
            JTableContas.getColumnModel().getColumn(5).setResizable(false);
            JTableContas.getColumnModel().getColumn(6).setResizable(false);
        }

        btnBaixarParcs.setText("Baixar Parcelas");
        btnBaixarParcs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaixarParcsActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel3.setText("Juros:");

        txtJuros.setFont(new java.awt.Font("Dialog", 0, 18));
        txtJuros.setText("0");
        txtJuros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJurosActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel4.setText("%");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel5.setText("Tipo Pgto:");

        cboTipoPgto.setFont(new java.awt.Font("Dialog", 0, 18));
        cboTipoPgto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dinheiro", "Cartão" }));
        cboTipoPgto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoPgtoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel6.setText("Desconto:");

        txtDesconto.setFont(new java.awt.Font("Dialog", 0, 18));
        txtDesconto.setText("0");
        txtDesconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescontoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel7.setText("%");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel8.setText("Valor Parcela:");

        txtValorParc.setEditable(false);
        txtValorParc.setFont(new java.awt.Font("Dialog", 0, 18));
        txtValorParc.setForeground(new java.awt.Color(-65536,true));

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel9.setText("Nº Parcela:");

        txtNParc.setEditable(false);
        txtNParc.setFont(new java.awt.Font("Dialog", 0, 18));

        btnRelatorio.setText("Relatório");
        btnRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel10.setText("Valor Final:");

        txtValorFinal.setEditable(false);
        txtValorFinal.setFont(new java.awt.Font("Dialog", 0, 18));
        txtValorFinal.setForeground(new java.awt.Color(-65536,true));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBaixarParcs, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtDesconto, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtJuros, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNParc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7))
                                .addGap(22, 22, 22))
                            .addComponent(cboTipoPgto, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValorParc)
                            .addComponent(txtValorFinal, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(82, 82, 82))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cboClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cboTipoPgto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtJuros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtNParc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtValorParc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtValorFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBaixarParcs, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1002, 377));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cboClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboClientesActionPerformed
    try{  
        
       if("Todas Vencidas".equals(cboClientes.getSelectedItem())){
           vencidas();
           return;
       }
        this.conexao = Conexao.getConexao();
        
        String sql = "Select id from clientes where nome = ?";
        PreparedStatement ps = this.conexao.prepareStatement(sql);
        ps.setString(1, String.valueOf(cboClientes.getSelectedItem()));
        ResultSet rsts = ps.executeQuery();
        
            rsts.next();
            
                txtID.setText(String.valueOf(rsts.getInt("id")));

            }catch(SQLException err){
                JOptionPane.showMessageDialog(null, "Erro" + err);
            }
   
       preencherJTable();
    }//GEN-LAST:event_cboClientesActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        try{  
            this.conexao = Conexao.getConexao();

            String sql = "Select id, nome from clientes where id = ?";
            PreparedStatement ps = this.conexao.prepareStatement(sql);
            ps.setString(1, String.valueOf(txtID.getText()));
            ResultSet rsts = ps.executeQuery();
            
            
            
         
            rsts.next();

                    cboClientes.setSelectedItem(String.valueOf(rsts.getString("nome")));


                }catch(SQLException err){
                    
                }
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnBaixarParcsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaixarParcsActionPerformed
       
     try{
         
        ContasReceber cr = new ContasReceber();
        ContasReceberDAO crDAO = new ContasReceberDAO();
        
        cr.setVlr_juros(vlrJuros);
        cr.setVlr_desc(vlrDesc);
        cr.setTipo_pgto(String.valueOf(cboTipoPgto.getSelectedItem()));
        cr.setId_venda(id_venda);
        cr.setNparc(Integer.parseInt(txtNParc.getText()));
        cr.setVlr_final(Double.parseDouble(String.valueOf(df.parse(txtValorFinal.getText()))));
        cr.setId_cliente(Integer.parseInt(txtID.getText()));
        
        
        //Dinheiro
        if(0 == cboTipoPgto.getSelectedIndex()){
            

            FrmContasReceberVista contasReceberVista = new FrmContasReceberVista();
            
            contasReceberVista.retornaTotal(Double.parseDouble(String.valueOf(df.parse(txtValorFinal.getText()))),
                          Integer.parseInt(txtID.getText()), id_venda, nparc, vlrDesc, vlrJuros);
            
           
        }else if(1 == cboTipoPgto.getSelectedIndex()){
          
            
            crDAO.baixarContasaReceber(cr);
            
            
            
                    
        }
        
        preencherJTable();    
        limparCampos();
        
     }catch(ParseException err){
              JOptionPane.showMessageDialog(null, "Erro ao converter moeda " + err);
     }
     
        
    }//GEN-LAST:event_btnBaixarParcsActionPerformed

    private void cboTipoPgtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoPgtoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTipoPgtoActionPerformed

    private void JTableContasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableContasMouseClicked
        if(evt.getClickCount() == 1){
            
            Point p =  evt.getPoint();
            
            int row = JTableContas.rowAtPoint(p);
            txtValorParc.setText(String.valueOf(JTableContas.getModel().getValueAt(row, 4)));
            txtValorFinal.setText(String.valueOf(JTableContas.getModel().getValueAt(row, 4)));
            id_venda = Integer.parseInt(String.valueOf(JTableContas.getModel().getValueAt(row, 0)));
            nparc = Integer.parseInt(String.valueOf(JTableContas.getModel().getValueAt(row, 3)));
            txtNParc.setText(String.valueOf(nparc));
            
            
            
        }
    }//GEN-LAST:event_JTableContasMouseClicked

    private void btnRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioActionPerformed
        if(!"Todas Vencidas".equals(cboClientes.getSelectedItem())){
            gerarRelContasReceber();
        }else{
            gerarRelVencidas();
        }
    }//GEN-LAST:event_btnRelatorioActionPerformed

    private void txtDescontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescontoActionPerformed
        desconto();
    }//GEN-LAST:event_txtDescontoActionPerformed

    private void txtJurosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJurosActionPerformed
        juros();
    }//GEN-LAST:event_txtJurosActionPerformed

    
    /**
     * @param args the command line arguments
     */
    

       private void carregarCBOClientes(){
        
      try{  
        this.conexao = Conexao.getConexao();
        
        String sql = "Select id, nome from clientes";
        PreparedStatement ps = this.conexao.prepareStatement(sql);
        ResultSet rsts = ps.executeQuery();
        
        while(rsts.next())
            
            
            cboClientes.addItem(rsts.getString("nome"));
            cboClientes.addItem("Todas Vencidas");
        
        
      }catch(SQLException err){
          JOptionPane.showMessageDialog(null, "Erro ao carregar CBO Clientes " + err);
      }      
    }
       
    private void preencherJTable(){
        
        JTableContas.getColumnModel().getColumn(0).setPreferredWidth(50);
        JTableContas.getColumnModel().getColumn(1).setPreferredWidth(50);
        JTableContas.getColumnModel().getColumn(2).setPreferredWidth(50);
        JTableContas.getColumnModel().getColumn(3).setPreferredWidth(25);
        JTableContas.getColumnModel().getColumn(4).setPreferredWidth(25);
        JTableContas.getColumnModel().getColumn(5).setPreferredWidth(25);
        JTableContas.getColumnModel().getColumn(6).setPreferredWidth(50);
        
        DefaultTableModel modelo = (DefaultTableModel)JTableContas.getModel();
        modelo.setNumRows(0);
       
        try{
           
            
            this.conexao = Conexao.getConexao();
            
            String sql = "Select id_vencom, cl.nome, data_venda, nparc, vlr_parc, vlr_juros, data_vencto from " +
                         "fluxocaixa cr inner join clientes cl on cr.id_cliente = cl.id where id_cliente = ? and pago = 'N'";
                         
            PreparedStatement ps = this.conexao.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(txtID.getText()));
            ResultSet rsts = ps.executeQuery();
            
            while(rsts.next()){

                modelo.addRow(new Object[] {rsts.getInt("id_vencom"),
                                            rsts.getString("cl.nome"),
                                            datefor.format(rsts.getDate("data_venda")),
                                            rsts.getInt("nparc"),
                                            df.format(rsts.getDouble("vlr_parc")),
                                            df.format(rsts.getDouble("vlr_juros")),
                                            datefor.format(rsts.getDate("data_vencto"))});
               
 
                
            }

        }catch(SQLException err){
            JOptionPane.showMessageDialog(null, "Erro ao preencher jtable" + err);
                  
        }
    }
    
    private void limparCampos(){
        
        txtJuros.setText("0");
        txtNParc.setText("");
        txtValorParc.setText("0,00");
        txtDesconto.setText("0");
        
    }
    
       private void desconto(){
        
      try{
          
        double total = Double.parseDouble(String.valueOf(df.parse(txtValorParc.getText())));
        double desc = Integer.parseInt(txtDesconto.getText());
        
       
        
        vlrDesc = total * (desc/100);
        
       
        total = total - (total * (desc / 100));
        
       
        txtValorFinal.setText(df.format(total));
        
      }catch(ParseException err){
          JOptionPane.showMessageDialog(null, "Erro no método desconto " + err);                    
      }
    }
       
       private void juros(){
        try {
            
            
            double total = Double.parseDouble(String.valueOf(df.parse(txtValorParc.getText())));
            double juros = Integer.parseInt(txtJuros.getText());
            
            vlrJuros = total * (juros/100);
            
            total = total + (total * (juros / 100));
            
            txtValorFinal.setText(df.format(total));
            
            
            
        } catch (ParseException ex) {
            Logger.getLogger(FrmContasReceber.class.getName()).log(Level.SEVERE, null, ex);
        }
           
           
           
       }
       
       private void vencidas(){
        try {
            
         
            
              //Formata a data para consultas em banco de dados
            DateFormat data = new SimpleDateFormat("yyyy-MM-dd");
            
             //Uso da classe calendar para trabalhar com as datas
            Calendar c = Calendar.getInstance();
           
         
            DefaultTableModel modelo = (DefaultTableModel)JTableContas.getModel();
            modelo.setNumRows(0);
            
            
            this.conexao = Conexao.getConexao();
            
            String sql = "Select id_vencom, cl.nome, data_venda, nparc, vlr_parc, vlr_juros, data_vencto from "
                       + "fluxocaixa cr inner join clientes cl on cr.id_cliente = cl.id where data_vencto < ? and pago = 'N'";
            PreparedStatement ps = this.conexao.prepareStatement(sql);
            ps.setString(1, data.format(c.getTime()));
            ResultSet rsts = ps.executeQuery();
            
            while(rsts.next()){
 
                modelo.addRow(new Object[] {rsts.getInt("id_vencom"),
                                            rsts.getString("cl.nome"),
                                            datefor.format(rsts.getDate("data_venda")),
                                            rsts.getInt("nparc"),
                                            df.format(rsts.getDouble("vlr_parc")),
                                            df.format(rsts.getDouble("vlr_juros")),
                                            datefor.format(rsts.getDate("data_vencto"))});                                            

            }
            
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao trazer  todas vencidas " + ex);
        }
           
          
       }
       
    public void gerarRelContasReceber(){
        
                try
                { 
                         

                     this.conexao = Conexao.getConexao();
                        String sql = "Select id_vencom, cl.nome, data_venda, nparc, vlr_parc, vlr_juros, data_vencto from " +
                                  "fluxocaixa cr inner join clientes cl on cr.id_cliente = cl.id where id_cliente = ? and pago = 'N'";

                        PreparedStatement ps = this.conexao.prepareStatement(sql);
                        ps.setInt(1, Integer.parseInt(txtID.getText()));

                        ResultSet rs = ps.executeQuery();//executa o sql 

                        JRResultSetDataSource tst= new JRResultSetDataSource(rs);
                        JasperReport jr = (JasperReport)JRLoader.loadObject(getClass().getResource("/Relatorios/relContasReceber.jasper"));
                        HashMap map = new HashMap();

                        JasperPrint jp = JasperFillManager.fillReport(jr,map,tst);

                        new GeraRelatorio().verRelat("Relatório de Contas a Receber", jp);


                    }
                    catch (JRException e)
                    { 
                        JOptionPane.showMessageDialog(null, e);

                    }   catch (SQLException ex) { 
                            Logger.getLogger(GeraRelatorio.class.getName()).log(Level.SEVERE, null, ex);
               } 
        
        
    }
    
    
     public void gerarRelVencidas(){
        
                try
                { 

                                 //Formata a data para consultas em banco de dados
                         DateFormat data = new SimpleDateFormat("yyyy-MM-dd");

                          //Uso da classe calendar para trabalhar com as datas
                         Calendar c = Calendar.getInstance();    
                         
                     this.conexao = Conexao.getConexao();
                        String sql = "Select id_vencom, cl.nome, data_venda, nparc, vlr_parc, vlr_juros, fc.data_vencto from " +
                    "fluxocaixa fc inner join clientes cl on fc.id_cliente = cl.id where fc.data_vencto < ? and pago = 'N'";

                        PreparedStatement ps = this.conexao.prepareStatement(sql);
                        ps.setString(1, data.format(c.getTime()));

                        ResultSet rs = ps.executeQuery();//executa o sql 

                        JRResultSetDataSource tst= new JRResultSetDataSource(rs);
                        JasperReport jr = (JasperReport)JRLoader.loadObject(getClass().getResource("/Relatorios/relTodasVencidas.jasper"));
                        HashMap map = new HashMap();

                        JasperPrint jp = JasperFillManager.fillReport(jr,map,tst);

                        new GeraRelatorio().verRelat("Relatório de Contas a Receber", jp);


                    }
                    catch (JRException e)
                    { 
                        JOptionPane.showMessageDialog(null, e);

                    }   catch (SQLException ex) { 
                            Logger.getLogger(GeraRelatorio.class.getName()).log(Level.SEVERE, null, ex);
               } 
        
        
    }
       

   
    
 
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FrmContasReceber().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTableContas;
    private javax.swing.JButton btnBaixarParcs;
    private javax.swing.JButton btnRelatorio;
    private javax.swing.JComboBox cboClientes;
    private javax.swing.JComboBox cboTipoPgto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtJuros;
    private javax.swing.JTextField txtNParc;
    private javax.swing.JTextField txtValorFinal;
    private javax.swing.JTextField txtValorParc;
    // End of variables declaration//GEN-END:variables
}
