/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastroCargos.java
 *
 * Created on 17/02/2014, 21:50:37
 */
package Formularios;

import java.sql.Connection;
import Banco.Conexao;
import Controle.CargosDAO;
import Controle.ServicosDAO;
import java.awt.Color;
import java.awt.Point;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelo.Cargos;


/**
 *
 * @author Formigao
 */
public class CadastroCargos extends javax.swing.JFrame {

     
    Connection conexao;
    ResultSet rst;
    DecimalFormat formatar = new DecimalFormat("##0.00");
    String CheckRegistro = "";
    
    
    /** Creates new form CadastroCargos */
    public CadastroCargos() {
        initComponents();
        txtCargo.grabFocus();
        PreencherJTable();
        threadBtnOnTime.start();
        txtSalario.setText("0");
    }
    
    
    

    
    private void FiltrarJTable()
    {
        TableRowSorter sorter = new TableRowSorter(JTableCargos.getModel());
        JTableCargos.setRowSorter(sorter);
        String texto = txtCargo.getText();
        
        
        try
        {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + texto));
            
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Valor não encontrado", "Aviso - Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
     private void PreencherJTable()
     {
        
     JTableCargos.getColumnModel().getColumn(0).setPreferredWidth(50); 
     JTableCargos.getColumnModel().getColumn(1).setPreferredWidth(50);
     JTableCargos.getColumnModel().getColumn(2).setPreferredWidth(50);
        
     DefaultTableModel modelo = (DefaultTableModel)JTableCargos.getModel();
     modelo.setNumRows(0);
     
     try
     {
         
         this.conexao = Conexao.getConexao();
         String sql = "Select * from cargos";
         PreparedStatement ps = this.conexao.prepareStatement(sql);
         ResultSet rst = ps.executeQuery();
         
         while(rst.next())
             modelo.addRow(new Object[]{rst.getString("id"),
                            rst.getString("cargo"),
                            rst.getString("salario")});
            
         
         
     }
     catch(SQLException err)
     {
         JOptionPane.showMessageDialog(null, "Erro de SQL " + err);
     }
     catch(Exception err)
     {
         JOptionPane.showMessageDialog(null, "Erro de Exception" + err);
     }//Fim Try Cacth
     
     }//Fim PreencherJTable
  
     
     
      private void LimparCampos()
      {
        
        txtID.setText("");
        txtCargo.setText("");
        txtSalario.setText("");
        dispose();
        new CadastroCargos().setVisible(true);
     }
    
     
      
    private void btnEditarAtualizar()
    {
        
        if (!"".equals(txtID.getText())){
            btnGravar.setText("ATUALIZAR");
        }
        
        else if ("".equals(txtCargo.getText())){
            btnGravar.setText("GRAVAR");
        }
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        threadBtnOnTime = new org.netbeans.examples.lib.timerbean.Timer();
        btnNovo = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableCargos = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnGravar = new javax.swing.JButton();
        txtSalario = new javax.swing.JTextField();
        txtCargo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        threadBtnOnTime.addTimerListener(new org.netbeans.examples.lib.timerbean.TimerListener() {
            public void onTime(java.awt.event.ActionEvent evt) {
                threadBtnOnTimeOnTime(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Cargos");
        setResizable(false);

        btnNovo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Novo 22 x 22.png"))); // NOI18N
        btnNovo.setText("NOVO");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Excluir 22 x 22.png"))); // NOI18N
        btnExcluir.setText("EXCLUIR");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        JTableCargos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Cargo", "Salário"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTableCargos.getTableHeader().setReorderingAllowed(false);
        JTableCargos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableCargosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JTableCargosMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(JTableCargos);

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel4.setText("Salário:");

        txtID.setEditable(false);
        txtID.setToolTipText("");
        txtID.setNextFocusableComponent(txtCargo);
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel3.setText("Cargo:");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel2.setText("Código:");

        btnGravar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Gravar 22 x 22.png"))); // NOI18N
        btnGravar.setText("GRAVAR");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        txtSalario.setToolTipText("");
        txtSalario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSalarioMouseClicked(evt);
            }
        });
        txtSalario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalarioActionPerformed(evt);
            }
        });
        txtSalario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSalarioKeyPressed(evt);
            }
        });

        txtCargo.setToolTipText("");
        txtCargo.setNextFocusableComponent(txtSalario);
        txtCargo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCargoMouseClicked(evt);
            }
        });
        txtCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCargoActionPerformed(evt);
            }
        });
        txtCargo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCargoKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Usar somente (,)  para separar centavos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSalario, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnNovo, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(btnGravar)
                        .addGap(10, 10, 10)
                        .addComponent(btnExcluir)))
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSalario, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNovo)
                    .addComponent(btnGravar)
                    .addComponent(btnExcluir))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(441, 374));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        if (!"".equals(txtCargo.getText())  || (!"".equals(txtSalario.getText())))
        {
            
            int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente criar um registro novo ?", "Novo", JOptionPane.YES_NO_OPTION);
            
            if (resp == JOptionPane.YES_OPTION){
                
                LimparCampos();
                
            }
            
        }
}//GEN-LAST:event_btnNovoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        
        try{
            
            if (!"".equals(txtID.getText())){
                
                int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir este resgistro ?", "Excluir", JOptionPane.YES_NO_OPTION);
                
                if(resp == JOptionPane.YES_OPTION){
                    
                    Cargos cargos = new Cargos();
                    cargos.setId(Integer.parseInt(txtID.getText()));
                    
                    
                    CargosDAO cargosDAO = new CargosDAO();
                    cargosDAO.excluirDados(cargos);
                    JOptionPane.showMessageDialog(null, "Excluido com Sucesso !!!");
                    PreencherJTable();
                    LimparCampos();
                    
                    
                }//FIM SE
                
                
                
            }//Fim SE
            
        }catch(SQLException err){
            JOptionPane.showMessageDialog(null, "Erro de SQL " + err);
        }//Fim Try Cacth
        
        
        
        
        
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void JTableCargosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableCargosMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2) {
            Point p = evt.getPoint();
            int row = JTableCargos.rowAtPoint(p);
            int col = JTableCargos.columnAtPoint(p);
            
            txtID.setText(String.valueOf(JTableCargos.getModel().getValueAt(row, 0)));
            txtCargo.setText(String.valueOf(JTableCargos.getModel().getValueAt(row, 1)));
            txtSalario.setText(formatar.format(Double.valueOf(String.valueOf(JTableCargos.getModel().getValueAt(row, 2)))));
        }
        
        
        
    }//GEN-LAST:event_JTableCargosMouseClicked

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtIDActionPerformed

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_txtIDKeyPressed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        
        CargosDAO cargosDAO = new CargosDAO();
        Cargos cargos = new Cargos();
        DecimalFormat formatar = new DecimalFormat("##0.00");
        
        
        if ("".equals(txtCargo.getText()) || ("".equals(txtSalario.getText()))) 
        {
            btnGravar.setEnabled(false);
            JTableCargos.setVisible(false);
            
            if("".equals(txtCargo.getText()))
            {
                txtCargo.setText("Campo não preenchido");
                txtCargo.setForeground(Color.RED);
            }
            else if("Campo não preenchido".equals(txtCargo.getText()))
            {
                CheckRegistro = "'Campo não Preenchido'" + "\n" + "Não é um registro valido";                
            }
            if("".equals(txtSalario.getText()))
            {
                txtSalario.setText("Campo não preenchido");
                txtSalario.setForeground(Color.red);
            }
            else if("Campo não preenchido".equals(txtSalario.getText()))
            {
                CheckRegistro = "'Campo não Preenchido'" + "\n" + "Não é um registro valido";                 
            }
            
            if(!"".equals(CheckRegistro))
            {
                JOptionPane.showMessageDialog(null, CheckRegistro );
            }
        }
        else
        {
            try
            {
                cargos.setCargo(txtCargo.getText());
                String moeda = String.valueOf(formatar.parse(txtSalario.getText()));
                Double valor = Double.parseDouble(moeda);
                cargos.setSalario(valor);

                if("".equals(txtID.getText())){
                    
                    
                    cargosDAO.insereDados(cargos);
                    JTableCargos.setVisible(true);
                    JOptionPane.showMessageDialog(null, "Cadastrado com Sucesso");
                    
                }else{
                    
                    cargos.setId(Integer.parseInt(txtID.getText()));
                    cargosDAO.atualizaDados(cargos);
                    JOptionPane.showMessageDialog(null, "Atualizado com Sucesso");
                    
                }//FIM SE
                
                PreencherJTable();
                
                LimparCampos();
                
            }
            catch(SQLException err)
            {
                JOptionPane.showMessageDialog(null, "Erro de SQL " + err);
            }
            catch(Exception err)
            {
                
            }//Fim Try Cacth
        }
        
    }//GEN-LAST:event_btnGravarActionPerformed

    private void txtSalarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalarioActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtSalarioActionPerformed

    private void txtSalarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalarioKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_txtSalarioKeyPressed

    private void txtCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCargoActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtCargoActionPerformed

    private void txtCargoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCargoKeyPressed
        
        
        FiltrarJTable();
}//GEN-LAST:event_txtCargoKeyPressed

    private void threadBtnOnTimeOnTime(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threadBtnOnTimeOnTime
        // TODO add your handling code here:
        btnEditarAtualizar();
    }//GEN-LAST:event_threadBtnOnTimeOnTime

    private void JTableCargosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableCargosMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_JTableCargosMouseEntered

    private void txtCargoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCargoMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtCargo.getText()))
        {
            txtCargo.setText("");
            txtCargo.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);
            
        }
    }//GEN-LAST:event_txtCargoMouseClicked

    private void txtSalarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSalarioMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtSalario.getText()))
        {
            txtSalario.setText("");
            txtSalario.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);
            
        }
    }//GEN-LAST:event_txtSalarioMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CadastroCargos().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTableCargos;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private org.netbeans.examples.lib.timerbean.Timer threadBtnOnTime;
    private javax.swing.JTextField txtCargo;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtSalario;
    // End of variables declaration//GEN-END:variables
}
