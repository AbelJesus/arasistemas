/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Formularios;

import Utilitarios.Backup;
import Utilitarios.SalvaProps;
import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Abel
 */
public class FrmBackup extends javax.swing.JFrame {
    
    Backup bk = new Backup();
    SalvaProps props = new SalvaProps();
            

    /**
     * Creates new form FrmBackup
     */
    public FrmBackup() {
        
           
            initComponents();
            puxaConfs();
            listaItems();
            lblDir.setText(System.getProperty("user.dir") + "\\bkdir");
            
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        dtaDataBackup = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        chbBackupEntraSai = new javax.swing.JCheckBox();
        chbBackupDiario = new javax.swing.JCheckBox();
        btnDefinirBackup = new javax.swing.JButton();
        sfHora = new com.toedter.components.JSpinField();
        sfMinutos = new com.toedter.components.JSpinField();
        sfSegundos = new com.toedter.components.JSpinField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnBackupManual = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        lblDir = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JListarDir = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtAquivoSelecionado = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDiretorio = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        btnRestaurar = new javax.swing.JButton();
        btnDeletarBackup = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Backup/Restauração");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Backup Diário"));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Data:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Hora:");

        chbBackupEntraSai.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chbBackupEntraSai.setText("Backup somente quando ENTRAR e SAIR do sistema");
        chbBackupEntraSai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbBackupEntraSaiActionPerformed(evt);
            }
        });

        chbBackupDiario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chbBackupDiario.setText("Executar este backup diariamente");
        chbBackupDiario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbBackupDiarioActionPerformed(evt);
            }
        });

        btnDefinirBackup.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDefinirBackup.setText("Definir Backup");
        btnDefinirBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefinirBackupActionPerformed(evt);
            }
        });

        sfHora.setMaximum(23);
        sfHora.setMinimum(0);

        sfMinutos.setMaximum(59);
        sfMinutos.setMinimum(0);

        sfSegundos.setMaximum(59);
        sfSegundos.setMinimum(0);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("HH");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("MM");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("SS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDefinirBackup, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbBackupEntraSai)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtaDataBackup, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sfHora, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(sfMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sfSegundos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12))))
                    .addComponent(chbBackupDiario, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(288, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(1, 1, 1)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dtaDataBackup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(sfHora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sfSegundos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sfMinutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(chbBackupEntraSai)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chbBackupDiario)
                .addGap(18, 18, 18)
                .addComponent(btnDefinirBackup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Backup Manual"));

        btnBackupManual.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBackupManual.setText("Montar Backup");
        btnBackupManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackupManualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBackupManual, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(489, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(btnBackupManual)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Os backups são salvos na pasta:");

        lblDir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDir.setForeground(new java.awt.Color(255, 0, 0));
        lblDir.setText("C:\\Users\\Abel\\Desktop\\A.R.A Sistemas\\Projeto TCC\\bkdir");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(lblDir))
                .addGap(25, 25, 25))
        );

        jTabbedPane1.addTab("Backup Diário", jPanel3);

        JListarDir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JListarDirMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(JListarDir);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Backups Realizados");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Arquivo Selecionado:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Diretório:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Data:");

        btnRestaurar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRestaurar.setText("Restaurar ");
        btnRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestaurarActionPerformed(evt);
            }
        });

        btnDeletarBackup.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDeletarBackup.setText("Deletar Backup");
        btnDeletarBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarBackupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8)
                                .addComponent(txtDiretorio, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                                .addComponent(txtAquivoSelecionado))
                            .addComponent(jLabel9)
                            .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRestaurar, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(121, 121, 121))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(btnDeletarBackup, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAquivoSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDiretorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnRestaurar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeletarBackup)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Restauração", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeletarBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarBackupActionPerformed

        if(!"".equals(txtAquivoSelecionado.getText())){

            int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir este Backup", "Aviso !!!",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if(resp == JOptionPane.YES_OPTION){

                deletarBackup();
                limparCampos();

            }
        }
    }//GEN-LAST:event_btnDeletarBackupActionPerformed

    private void btnRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestaurarActionPerformed
        restaurarBackup();
    }//GEN-LAST:event_btnRestaurarActionPerformed

    private void JListarDirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JListarDirMouseClicked
        if(evt.getClickCount() == 2){

            DateFormat df = new SimpleDateFormat("dd/MM/yyyy HH:mm");
            txtAquivoSelecionado.setText(String.valueOf(JListarDir.getSelectedValue()));
            File file = new File(System.getProperty("user.dir") + "\\bkdir\\" + String.valueOf(JListarDir.getSelectedValue()));
                txtDiretorio.setText(file.getAbsolutePath());
                txtData.setText(String.valueOf(df.format(file.lastModified())));

            }
    }//GEN-LAST:event_JListarDirMouseClicked

    private void btnBackupManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackupManualActionPerformed
        bk.backupManual();
        listaItems();
    }//GEN-LAST:event_btnBackupManualActionPerformed

    private void btnDefinirBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDefinirBackupActionPerformed

        DateFormat datefor = new SimpleDateFormat("dd/MM/yyyy-HH:mm:ss");
        Calendar c = Calendar.getInstance();

        c.setTime(dtaDataBackup.getDate());
        c.set(Calendar.HOUR_OF_DAY, sfHora.getValue());
        c.set(Calendar.MINUTE, sfMinutos.getValue());
        c.set(Calendar.SECOND, sfSegundos.getValue());

        opcaoDiario();
        opcaoBkEntraSai();
        //Salva a data do backup
        props.salvaProp("backupData", datefor.format(c.getTime()));
        //Executa seu agendamento
        bk.backupAgendado();
        listaItems();

    }//GEN-LAST:event_btnDefinirBackupActionPerformed

    private void chbBackupDiarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbBackupDiarioActionPerformed

    }//GEN-LAST:event_chbBackupDiarioActionPerformed

    private void chbBackupEntraSaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbBackupEntraSaiActionPerformed
        if(chbBackupEntraSai.isSelected() == true){

            chbBackupDiario.setEnabled(false);
            dtaDataBackup.setEnabled(false);
            sfHora.setEnabled(false);
            sfMinutos.setEnabled(false);
            sfSegundos.setEnabled(false);

        }else{

            chbBackupDiario.setEnabled(true);
            dtaDataBackup.setEnabled(true);
            sfHora.setEnabled(true);
            sfMinutos.setEnabled(true);
            sfSegundos.setEnabled(true);
        }
    }//GEN-LAST:event_chbBackupEntraSaiActionPerformed

       
    private void listaItems(){
        
                DefaultListModel lm = new DefaultListModel();
                
                File file = new File(System.getProperty("user.dir") + "\\bkdir");
                File afile[] = file.listFiles(); 
                
                for (int i = 0; i < afile.length; i++) { 
                File arquivos = afile[i]; 
                lm.addElement(arquivos.getName());
                
                  
                 }
                
                JListarDir.setModel(lm);
    }
    
    private void deletarBackup(){
        
        File file = new File(txtDiretorio.getText());
        file.delete();
        listaItems();
        
    }
    
    private void restaurarBackup(){
        
        try {
            
            //Codificação que faz o restauração do backup
            ProcessBuilder pb = new ProcessBuilder("mysql", "--user=root", "--password=knop01234", "bd_tcc", "-e", "source " + txtDiretorio.getText());
            pb.start();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao efetuar a restauração", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    private void opcaoDiario(){
        
        if(chbBackupDiario.isSelected() == true){
            props.salvaProp("backupDiario", "S");
            
            
            
        }else{
            props.salvaProp("backupDiario", "N");
        }
                                 
        
        
        
    }
    
    private void opcaoBkEntraSai(){
        
        if(chbBackupEntraSai.isSelected() == true){
            props.salvaProp("backupES", "S");
         
            
        }else{
            props.salvaProp("backupES", "N");
        
        }
        
        
    }
    
    private void puxaConfs(){
        
        try {
            
            DateFormat datefor = new SimpleDateFormat("dd/MM/yyyy-HH:mm:ss");
            
            Calendar c = Calendar.getInstance();
            String BackupDiario = props.puxaProp("backupDiario");
            String BackupEntraSai = props.puxaProp("backupES");
            String data = props.puxaProp("backupData");
            
            //Traz a Data agendada
            if(!"".equals(data)){
                
                c.setTime(datefor.parse(data));
                dtaDataBackup.setDate(c.getTime());
                sfHora.setValue(c.get(Calendar.HOUR_OF_DAY));
                sfMinutos.setValue(c.get(Calendar.MINUTE));
                sfSegundos.setValue(c.get(Calendar.SECOND));
                
            }
            
            //Traz o estado da CheckBox 'Backup Diário'
            if("S".equals(BackupDiario)){
                chbBackupDiario.setSelected(true);
            }
            
            //Traz o estado da CheckBox 'Backup quando Entra e Sai do Sistema'
            if("S".equals(BackupEntraSai)){
                
                chbBackupEntraSai.setSelected(true);
                chbBackupDiario.setEnabled(false);
                dtaDataBackup.setEnabled(false);
                sfHora.setEnabled(false);
                sfMinutos.setEnabled(false);
                sfSegundos.setEnabled(false);
                
            }
        
            
            
        } catch (ParseException ex) {
            Logger.getLogger(FrmBackup.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void limparCampos(){
        
        txtAquivoSelecionado.setText("");
        txtData.setText("");
        txtDiretorio.setText("");
        
    }
    
    
    
     

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmBackup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList JListarDir;
    private javax.swing.JButton btnBackupManual;
    private javax.swing.JButton btnDefinirBackup;
    private javax.swing.JButton btnDeletarBackup;
    private javax.swing.JButton btnRestaurar;
    private javax.swing.JCheckBox chbBackupDiario;
    private javax.swing.JCheckBox chbBackupEntraSai;
    private com.toedter.calendar.JDateChooser dtaDataBackup;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblDir;
    private com.toedter.components.JSpinField sfHora;
    private com.toedter.components.JSpinField sfMinutos;
    private com.toedter.components.JSpinField sfSegundos;
    private javax.swing.JTextField txtAquivoSelecionado;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtDiretorio;
    // End of variables declaration//GEN-END:variables
}
