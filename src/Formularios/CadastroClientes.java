/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor. 
 */


/*
 * CadastroClientes.java
 *
 * Created on 11/02/2014, 19:26:17
 */
package Formularios;


import Banco.Conexao;
import Controle.ClientesDAO;
import java.awt.Color;
import java.awt.Point;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelo.Clientes;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author Formigao
 */
public class CadastroClientes extends javax.swing.JFrame {
    
    Connection conexao;
    
    ResultSet rst;
    
    String CheckRegistro = "";

    /** Creates new form CadastroClientes */
    public CadastroClientes() {
        initComponents();
        //this.setExtendedState(this.getExtendedState()|JFrame.MAXIMIZED_BOTH);

        
        
        consultarCidades();
        txtNome.grabFocus();
        
        
       threadBtnOnTime.start();
        
        
        Preencher_JTable();
    
    }

   
    
   
    
    

      
    
     private void btnEditarAtualizar()
    {
        
        if (!"".equals(txtID.getText())){
            btnGravar.setText("ATUALIZAR");
        }
        
        else if ("".equals(txtNome.getText())){
            btnGravar.setText("GRAVAR");
        }
    }
     
    
    
     
    
       public void LimparCampos()
    {

        dispose();
        new CadastroClientes().setVisible(true);
        
        
        
     }
       
       private void consultarCidades()
       {
           try
           {
              this.conexao = Conexao.getConexao();
              String sql = "Select nome from cidades";
              PreparedStatement ps = this.conexao.prepareStatement(sql);
              ResultSet rsts = ps.executeQuery();
              while(rsts.next())
              
              cboCidade.addItem(rsts.getString("nome"));
              
           }
           catch (SQLException erro)
           {
               
           }
       }
       
       
    
       

       
       
       
       
    
    

   
          
           
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        threadBtnOnTime = new org.netbeans.examples.lib.timerbean.Timer();
        txtBairro = new javax.swing.JTextField();
        txtEndereco = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        btnExcluir = new javax.swing.JButton();
        txtComplemento = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        btnNovo = new javax.swing.JButton();
        btnGravar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtFone2 = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtDataNasc = new javax.swing.JFormattedTextField();
        txtFone1 = new javax.swing.JFormattedTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtUF = new javax.swing.JTextField();
        txtIDCidade = new javax.swing.JTextField();
        cboCidade = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        cboStatus = new javax.swing.JComboBox();
        txtCPF = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        txtRG = new javax.swing.JTextField();

        threadBtnOnTime.addTimerListener(new org.netbeans.examples.lib.timerbean.TimerListener() {
            public void onTime(java.awt.event.ActionEvent evt) {
                threadBtnOnTimeOnTime(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Clientes");
        setResizable(false);

        txtBairro.setToolTipText("");
        txtBairro.setNextFocusableComponent(txtNumero);
        txtBairro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBairroMouseClicked(evt);
            }
        });
        txtBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBairroActionPerformed(evt);
            }
        });
        txtBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBairroKeyPressed(evt);
            }
        });

        txtEndereco.setToolTipText("");
        txtEndereco.setNextFocusableComponent(txtBairro);
        txtEndereco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEnderecoMouseClicked(evt);
            }
        });
        txtEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnderecoActionPerformed(evt);
            }
        });
        txtEndereco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEnderecoKeyPressed(evt);
            }
        });

        txtNome.setToolTipText("");
        txtNome.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtNome.setNextFocusableComponent(txtRG);
        txtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomeFocusLost(evt);
            }
        });
        txtNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNomeMouseClicked(evt);
            }
        });
        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeKeyPressed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Excluir 22 x 22.png"))); // NOI18N
        btnExcluir.setText("EXCLUIR");
        btnExcluir.setToolTipText("Exclui o registro selecionado");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        txtComplemento.setToolTipText("");
        txtComplemento.setNextFocusableComponent(txtFone1);
        txtComplemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComplementoActionPerformed(evt);
            }
        });
        txtComplemento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtComplementoKeyPressed(evt);
            }
        });

        txtID.setToolTipText("");
        txtID.setEnabled(false);
        txtID.setNextFocusableComponent(txtNome);
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });

        btnNovo.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Novo 22 x 22.png"))); // NOI18N
        btnNovo.setText("NOVO");
        btnNovo.setToolTipText("Cria um novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnGravar.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Gravar 22 x 22.png"))); // NOI18N
        btnGravar.setText("GRAVAR");
        btnGravar.setToolTipText("Grava o registro no banco de dados");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel5.setText("Bairro:");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel6.setText("Endereço:");

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel7.setText("Nº:");

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel8.setText("Complemento:");

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel9.setText("RG:");

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel10.setText(" CPF:");

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel11.setText("Data Nascimento:");

        jLabel12.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel12.setText("Fone(Res):");

        txtNumero.setToolTipText("");
        txtNumero.setNextFocusableComponent(txtComplemento);
        txtNumero.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNumeroMouseClicked(evt);
            }
        });
        txtNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroActionPerformed(evt);
            }
        });
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroKeyPressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel13.setText("Fone(Cel):");

        try {
            txtFone2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #-####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFone2.setNextFocusableComponent(txtEmail);

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel3.setText("Código:");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel2.setText("Nome:");

        jLabel14.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel14.setText("Email:");

        try {
            txtDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataNasc.setNextFocusableComponent(cboCidade);
        txtDataNasc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDataNascMouseClicked(evt);
            }
        });

        try {
            txtFone1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFone1.setNextFocusableComponent(txtFone2);

        txtEmail.setToolTipText("");
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailKeyPressed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel15.setText("Cidade:");

        txtUF.setToolTipText("");
        txtUF.setEnabled(false);
        txtUF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUFActionPerformed(evt);
            }
        });
        txtUF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUFKeyPressed(evt);
            }
        });

        txtIDCidade.setToolTipText("");
        txtIDCidade.setEnabled(false);
        txtIDCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDCidadeActionPerformed(evt);
            }
        });
        txtIDCidade.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtIDCidadePropertyChange(evt);
            }
        });
        txtIDCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDCidadeKeyPressed(evt);
            }
        });

        cboCidade.setNextFocusableComponent(txtEndereco);
        cboCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCidadeActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel16.setText("Status:");

        cboStatus.setFont(new java.awt.Font("Dialog", 0, 18));
        cboStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Regular", "Irregular" }));

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPF.setNextFocusableComponent(txtDataNasc);
        txtCPF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCPFMouseClicked(evt);
            }
        });

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "", null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Cidade", "UF", "Bairro", "Endereço", "Numero", "Complemento", "RG", "CPF", "Nascimento", "Fone 1", "Fone 2", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableClientes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableClientes.getTableHeader().setReorderingAllowed(false);
        jTableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableClientes);
        if (jTableClientes.getColumnModel().getColumnCount() > 0) {
            jTableClientes.getColumnModel().getColumn(0).setResizable(false);
            jTableClientes.getColumnModel().getColumn(1).setResizable(false);
            jTableClientes.getColumnModel().getColumn(2).setResizable(false);
            jTableClientes.getColumnModel().getColumn(3).setResizable(false);
            jTableClientes.getColumnModel().getColumn(4).setResizable(false);
            jTableClientes.getColumnModel().getColumn(5).setResizable(false);
            jTableClientes.getColumnModel().getColumn(6).setResizable(false);
            jTableClientes.getColumnModel().getColumn(7).setResizable(false);
            jTableClientes.getColumnModel().getColumn(8).setResizable(false);
            jTableClientes.getColumnModel().getColumn(9).setResizable(false);
            jTableClientes.getColumnModel().getColumn(10).setResizable(false);
            jTableClientes.getColumnModel().getColumn(11).setResizable(false);
            jTableClientes.getColumnModel().getColumn(12).setResizable(false);
            jTableClientes.getColumnModel().getColumn(13).setResizable(false);
        }

        txtRG.setNextFocusableComponent(txtCPF);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(6, 6, 6)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(9, 9, 9)
                                .addComponent(txtIDCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(cboCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(txtUF, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(2, 2, 2)
                                .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(5, 5, 5)
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel6)
                                        .addGap(4, 4, 4)
                                        .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(4, 4, 4)
                                                .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(4, 4, 4)
                                                .addComponent(jLabel7)
                                                .addGap(4, 4, 4)
                                                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addGap(4, 4, 4)
                                                .addComponent(txtFone1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtFone2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(4, 4, 4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(jLabel16)
                        .addGap(4, 4, 4)
                        .addComponent(cboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 2, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIDCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cboCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtUF, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel6))
                            .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(txtFone1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(3, 3, 3)
                                    .addComponent(jLabel13))
                                .addComponent(txtFone2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel16))
                    .addComponent(cboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNovo)
                        .addGap(11, 11, 11)
                        .addComponent(btnGravar)
                        .addGap(6, 6, 6)
                        .addComponent(btnExcluir))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(785, 427));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBairroActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtBairroActionPerformed

    private void txtBairroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBairroKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_txtBairroKeyPressed

    private void txtEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnderecoActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtEnderecoActionPerformed

    private void txtEnderecoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnderecoKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_txtEnderecoKeyPressed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
             
}//GEN-LAST:event_txtNomeActionPerformed

    private void txtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyPressed
        // TODO add your handling code here:
        FiltrarJTable();
    }//GEN-LAST:event_txtNomeKeyPressed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed

       
           
        if ("".equals(txtID.getText()))
        {
            JOptionPane.showMessageDialog(null, "Erro, nenhum registro selecionado");
        }        
        else if (!"".equals(txtID.getText()))
        {
            
            
           int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir esse registro?", "Excluir", JOptionPane.YES_NO_OPTION);
           if (resp == JOptionPane.YES_OPTION) 
           {
               
               excluir();
        
        
            }
        }
        
      
        
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void txtComplementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComplementoActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtComplementoActionPerformed

    private void txtComplementoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComplementoKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_txtComplementoKeyPressed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtIDActionPerformed

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_txtIDKeyPressed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        
      if(!"".equals(txtNome.getText()) || !"".equals(txtNumero.getText()) || !"".equals(txtRG.getText()) || !"".equals(txtCPF.getText()) || !"".equals(txtDataNasc.getText()))
        {
            if(JOptionPane.showConfirmDialog(null, "Deseja realmente criar um novo?", "Novo Cliente", 2, JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION)
            {
                LimparCampos();
            } 
            
        }
        
        
        
        
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed

        
        
        
        
       
           if("".equals(txtNome.getText()) || "".equals(txtBairro.getText()) || "".equals(txtEndereco.getText())  ||
           "".equals(txtCPF.getText()) || "".equals(txtDataNasc.getText())  || "".equals(txtNumero.getText()))
        {
            btnGravar.setEnabled(false);
            jTableClientes.setVisible(false);
            
            
            if("".equals(txtNome.getText()))
            {
                txtNome.setText("Campo não preenchido");
                txtNome.setForeground(Color.RED);
            }
            else if("Campo não preenchido".equals(txtNome.getText()))
            {
                CheckRegistro = "'Campo não Preenchido'" + "\n" + "Não é um registro valido";                
            }
            
            if("".equals(txtNumero.getText()))
            {
                txtNumero.setText("Campo não preenchido");
                txtNumero.setForeground(Color.RED);
            }
            else if("Campo não preenchido".equals(txtNumero.getText()))
            {
                CheckRegistro = "'Campo não Preenchido'" + "\n" + "Não é um registro valido";                
            }
            
            if("".equals(txtEndereco.getText()))
            {
                txtEndereco.setText("Campo não preenchido");
                txtEndereco.setForeground(Color.RED);
            }
            else if("Campo não preenchido".equals(txtEndereco.getText()))
            {
                CheckRegistro = "'Campo não Preenchido'" + "\n" + "Não é um registro valido";               
            }
            if("".equals(txtBairro.getText()))
            {
                txtBairro.setText("Campo não preenchido");
                txtBairro.setForeground(Color.RED);
            }
            else if("Campo não preenchido".equals(txtBairro.getText()))
            {
                CheckRegistro = "'Campo não Preenchido'" + "\n" + "Não é um registro valido";             
            }
                   
            
            if("   .   .   -  ".equals(txtCPF.getText()))
            {
                try {
                    txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("Campo não preenchido")));
                    txtCPF.setForeground(Color.RED);
                } catch (ParseException ex) {
                    Logger.getLogger(CadastroClientes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if("Campo não preenchido".equals(txtCPF.getText()))
            {
                CheckRegistro = "'Campo não Preenchido'" + "\n" + "Não é um registro valido";             
            }
             
            if("  -  -    ".equals(txtDataNasc.getText()))
            try 
            {
             txtDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("Campo não preenchido")));
             txtDataNasc.setForeground(Color.RED);
            } 
            catch (java.text.ParseException ex)
            {
             ex.printStackTrace();
            }
            else if("Campo não preenchido".equals(txtDataNasc.getText()))
            {
               CheckRegistro = "'Campo não Preenchido'" + "\n" + "Não é um registro valido";           
            }
            if(!"".equals(CheckRegistro))
            {
                JOptionPane.showMessageDialog(null, CheckRegistro );
            }
        }

        else 
        {
         
        
        try 
        {
        
            Clientes clientes = new Clientes();
            
            clientes.setNome(txtNome.getText());
            clientes.setID_Cidade(Integer.parseInt(txtIDCidade.getText()));
            clientes.setUF(txtUF.getText());
            clientes.setBairro(txtBairro.getText());
            clientes.setEndereco(txtEndereco.getText());
            clientes.setNumero(Integer.parseInt(txtNumero.getText()));
            clientes.setComplemento(txtComplemento.getText());
            clientes.setRG(txtRG.getText());
            clientes.setCPF(txtCPF.getText());
            clientes.setDataNasc(txtDataNasc.getText());
            clientes.setFone1(txtFone1.getText());
            clientes.setFone2(txtFone2.getText());
            clientes.setEmail(txtEmail.getText());
            
            if(0 == cboStatus.getSelectedIndex()){
                clientes.setStatus("R");
            }else if(1 == cboStatus.getSelectedIndex()){
                clientes.setStatus("I");
            }
            
            
            ClientesDAO clientesDAO = new ClientesDAO();
            if("".equals(String.valueOf(txtID.getText())))
            {
                clientesDAO.InsereDados(clientes);
                JOptionPane.showMessageDialog(null, "Gravado com sucesso");
                jTableClientes.setVisible(true);
                
                
            }
                    
            
            else
            {
               clientes.setId(Integer.parseInt(txtID.getText()));
               clientesDAO.atualizaDados(clientes);
               JOptionPane.showMessageDialog(null, "Atualizado com Sucesso");
              
            }
                
                
                
            //Preenche JTable
                    Preencher_JTable();
                    
                    
                    
                    //Limpa os campos
                    LimparCampos();
                    
                     }
        catch(SQLException err)
        {
                    
                    JOptionPane.showMessageDialog(null, "Erro ao gravar " + err);
                    
        }catch(Exception err)
        {
                    JOptionPane.showMessageDialog(null, "Erro de Exception " + err);
                    
        }//Fim Try Cacth 
            
        }
       
       
        
        
    }//GEN-LAST:event_btnGravarActionPerformed


        public void Preencher_JTable()
    {
     jTableClientes.getColumnModel().getColumn(0).setPreferredWidth(50); 
     jTableClientes.getColumnModel().getColumn(1).setPreferredWidth(100);
     jTableClientes.getColumnModel().getColumn(2).setPreferredWidth(70);
     jTableClientes.getColumnModel().getColumn(3).setPreferredWidth(25);
     jTableClientes.getColumnModel().getColumn(4).setPreferredWidth(100);
     jTableClientes.getColumnModel().getColumn(5).setPreferredWidth(150);
     jTableClientes.getColumnModel().getColumn(6).setPreferredWidth(70);
     jTableClientes.getColumnModel().getColumn(7).setPreferredWidth(100);
     jTableClientes.getColumnModel().getColumn(8).setPreferredWidth(100);
     jTableClientes.getColumnModel().getColumn(9).setPreferredWidth(100);
     jTableClientes.getColumnModel().getColumn(10).setPreferredWidth(100);
     jTableClientes.getColumnModel().getColumn(11).setPreferredWidth(100);
     jTableClientes.getColumnModel().getColumn(12).setPreferredWidth(100);
     jTableClientes.getColumnModel().getColumn(13).setPreferredWidth(200);
     
     
     DefaultTableModel modelo = (DefaultTableModel)jTableClientes.getModel();
     modelo.setNumRows(0);
     
     try
     {
         this.conexao = Conexao.getConexao();
         String sql = "Select cl.*, ci.nome cidade  from clientes cl inner join cidades ci on cl.id_cidade = ci.id";
                      
         PreparedStatement ps = this.conexao.prepareStatement(sql);
         ResultSet rsts = ps.executeQuery();
         
         while (rsts.next())
             modelo.addRow(new Object[]{rsts.getString("ID"),
                                      rsts.getString("Nome"),
                                      rsts.getString("cidade"),
                                      rsts.getString("uf"),
                                      rsts.getString("Bairro"),
                                      rsts.getString("Endereco"),
                                      rsts.getInt("Numero"),
                                      rsts.getString("Complemento"),
                                      rsts.getString("RG"),
                                      rsts.getString("CPF"),
                                      rsts.getString("Datanasc"),
                                      rsts.getString("Fone1"),
                                      rsts.getString("Fone2"),
                                      rsts.getString("Email")}); 
         
     }
     catch(SQLException err){
         
         JOptionPane.showMessageDialog(null, "Erro ao preencher JTable " + err);
         
     }catch(Exception err){
         JOptionPane.showMessageDialog(null, "Erro de Exception " + err);
     }//Fim Try Cacth
    }
  
    
    private void txtNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtNumeroActionPerformed

    private void txtNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_txtNumeroKeyPressed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtEmailActionPerformed

    private void txtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_txtEmailKeyPressed

    private void threadBtnOnTimeOnTime(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threadBtnOnTimeOnTime
        // TODO add your handling code here:
        btnEditarAtualizar();
    }//GEN-LAST:event_threadBtnOnTimeOnTime

    private void txtNomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNomeMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtNome.getText()))
        {
            txtNome.setText("");
            txtNome.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);
            
            
        }
    }//GEN-LAST:event_txtNomeMouseClicked

    private void txtUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUFActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtUFActionPerformed

    private void txtUFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUFKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_txtUFKeyPressed

    private void txtIDCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDCidadeActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtIDCidadeActionPerformed

    private void txtIDCidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDCidadeKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_txtIDCidadeKeyPressed

    private void cboCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCidadeActionPerformed
        // TODO add your handling code here:
        try
        {
            this.conexao = Conexao.getConexao();
            String sql = "Select id, uf from cidades where nome = ?";
            PreparedStatement ps = this.conexao.prepareStatement(sql);
            ps.setString(1, String.valueOf(cboCidade.getSelectedItem()));
            ResultSet rsts = ps.executeQuery();
            rsts.next();
 
            txtIDCidade.setText(rsts.getString("id"));
            txtUF.setText(rsts.getString("uf"));
            
            
        }
        catch (SQLException ERRO)
        {
          
        }
                
        
        
    }//GEN-LAST:event_cboCidadeActionPerformed

    private void txtIDCidadePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtIDCidadePropertyChange
        // TODO add your handling code here:

   
        
    }//GEN-LAST:event_txtIDCidadePropertyChange

    private void txtDataNascMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDataNascMouseClicked
        // TODO add your handling code here:
        
            try 
            {
            txtDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
            txtDataNasc.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);
            } 
            catch (java.text.ParseException ex)
            {
             ex.printStackTrace();
            }       
         
    }//GEN-LAST:event_txtDataNascMouseClicked

    private void txtBairroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBairroMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtBairro.getText()))
        {
            txtBairro.setText("");
            txtBairro.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);
            
        }
    }//GEN-LAST:event_txtBairroMouseClicked

    private void txtEnderecoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEnderecoMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtEndereco.getText()))
        {
            txtEndereco.setText("");
            txtEndereco.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);
            
        }
    }//GEN-LAST:event_txtEnderecoMouseClicked

    private void jTableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientesMouseClicked
        // TODO add your handling code here:
       
  if(evt.getClickCount() == 2)
        {
            Point p = evt.getPoint();
            int row = jTableClientes.rowAtPoint(p);
            
            
            txtID.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 0)));
            txtNome.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 1)));
            cboCidade.setSelectedItem(String.valueOf(jTableClientes.getModel().getValueAt(row, 2)));
            txtUF.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 3)));
            txtBairro.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 4)));
            txtEndereco.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 5)));
            txtNumero.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 6)));
            txtComplemento.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 7)));
            txtRG.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 8)));
            txtCPF.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 9)));
            txtDataNasc.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 10)));
            txtFone1.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 11)));
            txtFone2.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 12)));
            txtEmail.setText(String.valueOf(jTableClientes.getModel().getValueAt(row, 13)));
            
            //JOptionPane.showMessageDialog(null, String.valueOf(jTableClientes.getModel().getValueAt(row, 8)));
            
            this.conexao = Conexao.getConexao();
        
        try
        {
            String sql = "select nome from cidades where id = ?";
            PreparedStatement ps = this.conexao.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(txtIDCidade.getText()));
            ResultSet rsts = ps.executeQuery();
            
            rsts.next();
            
            cboCidade.setSelectedItem(rsts.getString("nome"));
            
            
        }
        catch(SQLException erro)
        {
            JOptionPane.showMessageDialog(null, erro);
        }
        
        }
}//GEN-LAST:event_jTableClientesMouseClicked

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked
        // TODO add your handling code here:
}//GEN-LAST:event_jScrollPane2MouseClicked

    private void txtCPFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCPFMouseClicked
        // TODO add your handling code here:
        
        try 
            {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
            txtCPF.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);
            } 
            catch (java.text.ParseException ex)
            {
             ex.printStackTrace();
            }       
        
    }//GEN-LAST:event_txtCPFMouseClicked

    private void txtNumeroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNumeroMouseClicked
        // TODO add your handling code here:
        if ("Campo não preenchido".equals(txtNumero.getText()))
        {
            txtNumero.setText("");
            txtNumero.setForeground(Color.BLACK);
            btnGravar.setEnabled(true);
            
        }
    }//GEN-LAST:event_txtNumeroMouseClicked

    private void txtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeFocusLost

         private void FiltrarJTable()
    {
        TableRowSorter sorter = new TableRowSorter(jTableClientes.getModel());
        jTableClientes.setRowSorter(sorter);
        String texto = txtNome.getText();
        
        try
        {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + texto));
            
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Valor não encontrado", "Aviso - Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
         
     private void excluir(){
         
        try {
            Clientes clientes = new Clientes();
            clientes.setId(Integer.parseInt(txtID.getText()));
            ClientesDAO clientesDAO = new ClientesDAO();
            clientesDAO.deletarDados(clientes);
            JOptionPane.showMessageDialog(null, "Excluido com Sucesso !");
            Preencher_JTable();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir cliente \n"
                    + "Este cliente possui movimentações !!!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
         
     }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CadastroClientes().setVisible(true);
            }
        });
    }
    
    
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JComboBox cboCidade;
    private javax.swing.JComboBox cboStatus;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableClientes;
    private org.netbeans.examples.lib.timerbean.Timer threadBtnOnTime;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JFormattedTextField txtDataNasc;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JFormattedTextField txtFone1;
    private javax.swing.JFormattedTextField txtFone2;
    private javax.swing.JTextField txtID;
    public javax.swing.JTextField txtIDCidade;
    public javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtRG;
    public javax.swing.JTextField txtUF;
    // End of variables declaration//GEN-END:variables
}
