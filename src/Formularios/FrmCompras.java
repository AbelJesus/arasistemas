/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmCompras.java
 *
 * Created on 10/04/2014, 19:11:42
 */
package Formularios;

import Banco.Conexao;
import Controle.ComprasDAO;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Currency;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Compras;

/**
 *
 * @author Formigao
 */
public class FrmCompras extends javax.swing.JFrame {
    
      
    
    Connection conexao;
    //Objeto criado para ter acesso aos metodos para controle do banco
     ComprasDAO comprasDAO = new ComprasDAO();
     
     double total = 0;
     int estMin = 0;
     
     //Classe resonsavel por converter a Moeda
     DecimalFormat formater = new DecimalFormat("###,##0.00"); 
     
     //Objeto criado para interação com os dados encapsulados
     Compras compras = new Compras();
     
     
     DefaultTableModel modelo;

    /** Creates new form FrmCompras */
    public FrmCompras() {
        initComponents();
        
        carregarCBOFornecedores();
        carregaCBOProdutos();
        AtivarDesativarControle(true, false, false);
        
        //Faz o menu principal ficar de tela cheia e adiciona Background
        //this.setExtendedState(this.getExtendedState()|JFrame.MAXIMIZED_BOTH);
     
        Date data = new Date();
        dtaDataAtual.setDate(data);
        
        PnInfoPgto.setEnabled(false);
        
        //Configura a JTableItems
        JTableItems.getColumnModel().getColumn(0).setPreferredWidth(80);
        JTableItems.getColumnModel().getColumn(1).setPreferredWidth(150);
        JTableItems.getColumnModel().getColumn(2).setPreferredWidth(150);
        JTableItems.getColumnModel().getColumn(3).setPreferredWidth(150);
        
        modelo = (DefaultTableModel)JTableItems.getModel();
         
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    private void dadosCboFornecedores()
    {

          try
          {
              this.conexao = Conexao.getConexao();
            
              String sql = "Select id  from fornecedores where razao_social = ?";
              PreparedStatement ps = this.conexao.prepareStatement(sql);
              ps.setString(1, String.valueOf(cboFornecedor.getSelectedItem()));
              ResultSet rsts = ps.executeQuery();
            
              rsts.next();
                               
              //Carregar TextBox´s
               txtIDFornecedor.setText(rsts.getString("id"));
         
            //Enviar Dados pro Encapsulamento
               compras.setId_fornecedor(rsts.getInt("id"));
               compras.setDatavenda(dtaDataAtual.getDate());
               compras.setTotal(total);
               
              
      
            }
          catch(SQLException err)
          {
                JOptionPane.showMessageDialog(null, "Erro ao trazer dados CBO Fornecedores " + err);
          }
        
    }
    
     private void dadosCBOProdutos()
    {
        try
        {
            this.conexao = Conexao.getConexao();
            String sql = "select cod_barra, estoque, valor_custo from produtos where descricao = ?";
            PreparedStatement ps = this.conexao.prepareStatement(sql);
            ps.setString(1, String.valueOf(cboProdutos.getSelectedItem()));
            ResultSet rsts = ps.executeQuery();
            
            rsts.next();
            
            txtCodBarra.setText(rsts.getString("cod_barra"));
            txtEstoque.setText(rsts.getString("estoque"));
            txtVlrUnit.setText(String.valueOf(formater.format(Double.parseDouble(rsts.getString("valor_custo")))));
            
             rsts.close();
                    
        }
         catch(SQLException err)
          {
                JOptionPane.showMessageDialog(null, "Erro ao trazer dados CBO Produtos " + err);
          }
        
        
    }
    
    private void carregarCBOFornecedores()
       {
           try
           {
              this.conexao = Conexao.getConexao();
              String sql = "Select razao_social from fornecedores";
              PreparedStatement ps = this.conexao.prepareStatement(sql);
              ResultSet rsts = ps.executeQuery();
              while(rsts.next())
              
              cboFornecedor.addItem(rsts.getString("razao_social"));
              
           }
           catch (SQLException erro)
           {
               JOptionPane.showMessageDialog(null, "Erro ao carregar CBO Fornecedores " + erro);
           }
       }
    
    private void AtivarDesativarControle(boolean pn1,boolean pn2,boolean pn3)
    {
        
        //PnInfoFornecedores
        btnConfirmarCliente.setEnabled(pn1);
        cboFornecedor.setEnabled(pn1);
        dtaDataAtual.setEnabled(false);
        
        
        //PnInfoItems
        
        cboProdutos.setEnabled(pn2);
        sfQtde.setEnabled(pn2);
        
        btnAddItem.setEnabled(pn2);
        btnRemover.setEnabled(pn2);
        btnNovaVenda.setEnabled(pn2);
        btnCancelar.setEnabled(pn2);
        btnConfirmarItens.setEnabled(pn2);
       
        
        //PninfoTipoPgto
        cboTipoPgto.setEnabled(pn3);
        sfNParc.setEnabled(pn3);
        dtaVencto.setEnabled(pn3);
        txtVlrParcela.setEnabled(pn3);
        btnConfirmarVenda.setEnabled(false);
        
    
    }
    
    private void carregaCBOProdutos()
    {
       try
       {
           
        this.conexao = Conexao.getConexao();
        String sql = "select descricao from produtos";
        PreparedStatement ps = this.conexao.prepareStatement(sql);
        ResultSet rsts = ps.executeQuery();
        while(rsts.next())
            
            cboProdutos.addItem(rsts.getString("descricao"));
              
   
       }
           
       catch (SQLException erro)
           
       {
               JOptionPane.showMessageDialog(null, "Erro ao carregar CBO Fornecedores " + erro);
           
       }
    
        
       
        
       
       
    }
    
    
     //Método responsável pelo preenchimento da JTableItens
     private void PreencherJTableItems()
     {

        String[] items = new String[5];
        
        items[0] = txtCodBarra.getText();
        items[1] = String.valueOf(cboProdutos.getSelectedItem());
        items[2] = String.valueOf(txtVlrUnit.getText());
        items[3] = String.valueOf(sfQtde.getValue());
        
        modelo.insertRow(0, items);

    }
   
   
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PnInfoFornecedor = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIDFornecedor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cboFornecedor = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        dtaDataAtual = new com.toedter.calendar.JDateChooser();
        btnConfirmarCliente = new javax.swing.JButton();
        txtIDCompra = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cboProdutos = new javax.swing.JComboBox();
        txtCodBarra = new javax.swing.JTextField();
        txtEstoque = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        sfQtde = new com.toedter.components.JSpinField();
        jLabel12 = new javax.swing.JLabel();
        txtVlrUnit = new javax.swing.JTextField();
        btnAddIProduto = new javax.swing.JButton();
        btnConfirmarItens = new javax.swing.JButton();
        btnAddItem = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnNovaVenda = new javax.swing.JButton();
        PnInfoPgto = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        cboTipoPgto = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        sfNParc = new com.toedter.components.JSpinField();
        txtVlrParcela = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        dtaVencto = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        btnConfirmarVenda = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableItems = new javax.swing.JTable();
        btnRemover = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar Compra");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        PnInfoFornecedor.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações do Fornecedor"));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel1.setText("Cod. Fornecedor:");

        txtIDFornecedor.setEditable(false);
        txtIDFornecedor.setFont(new java.awt.Font("Dialog", 0, 18));
        txtIDFornecedor.setToolTipText("Código do cliente");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel2.setText("Fornecedor:");

        cboFornecedor.setFont(new java.awt.Font("Dialog", 0, 18));
        cboFornecedor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione um Fornecedor" }));
        cboFornecedor.setToolTipText("Selecione um cliente para fazer a compra");
        cboFornecedor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboFornecedorItemStateChanged(evt);
            }
        });
        cboFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFornecedorActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel3.setText("Data:");

        dtaDataAtual.setToolTipText("Data da Venda");

        btnConfirmarCliente.setFont(new java.awt.Font("Dialog", 0, 18));
        btnConfirmarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Confirmar 22 x 22.png"))); // NOI18N
        btnConfirmarCliente.setText("Confirmar");
        btnConfirmarCliente.setToolTipText("Confirma o cliente");
        btnConfirmarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarClienteActionPerformed(evt);
            }
        });

        txtIDCompra.setEditable(false);
        txtIDCompra.setFont(new java.awt.Font("Dialog", 0, 18));
        txtIDCompra.setToolTipText("Código da venda");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel7.setText("ID Compra:");

        javax.swing.GroupLayout PnInfoFornecedorLayout = new javax.swing.GroupLayout(PnInfoFornecedor);
        PnInfoFornecedor.setLayout(PnInfoFornecedorLayout);
        PnInfoFornecedorLayout.setHorizontalGroup(
            PnInfoFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnInfoFornecedorLayout.createSequentialGroup()
                .addGroup(PnInfoFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnInfoFornecedorLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(dtaDataAtual, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                    .addGroup(PnInfoFornecedorLayout.createSequentialGroup()
                        .addGroup(PnInfoFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PnInfoFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIDCompra, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(txtIDFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))))
                .addGap(27, 27, 27)
                .addGroup(PnInfoFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PnInfoFornecedorLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnConfirmarCliente))
                .addContainerGap())
        );
        PnInfoFornecedorLayout.setVerticalGroup(
            PnInfoFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnInfoFornecedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnInfoFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtIDCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnInfoFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIDFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cboFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnInfoFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dtaDataAtual, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConfirmarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PnInfoFornecedorLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Informação do Item"));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel4.setText("Cod. Barra:");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel5.setText("Estoque atual:");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel6.setText("Produto:");

        cboProdutos.setFont(new java.awt.Font("Dialog", 0, 18));
        cboProdutos.setToolTipText("Selecione um Produto");
        cboProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboProdutosMouseClicked(evt);
            }
        });
        cboProdutos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboProdutosItemStateChanged(evt);
            }
        });
        cboProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboProdutosActionPerformed(evt);
            }
        });

        txtCodBarra.setEditable(false);
        txtCodBarra.setFont(new java.awt.Font("Dialog", 0, 18));
        txtCodBarra.setToolTipText("Código do cliente");
        txtCodBarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodBarraActionPerformed(evt);
            }
        });

        txtEstoque.setEditable(false);
        txtEstoque.setFont(new java.awt.Font("Dialog", 0, 18));
        txtEstoque.setToolTipText("Código do cliente");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel10.setText("Adicionar estoque:");

        sfQtde.setToolTipText("Indique uma quantidade");
        sfQtde.setMinimum(1);
        sfQtde.setValue(1);

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel12.setText("Valor Unit:");

        txtVlrUnit.setEditable(false);
        txtVlrUnit.setFont(new java.awt.Font("Dialog", 0, 18));
        txtVlrUnit.setText("0");

        btnAddIProduto.setFont(new java.awt.Font("Dialog", 0, 18));
        btnAddIProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Add 22 x 22.png"))); // NOI18N
        btnAddIProduto.setText("Cadastrar Produto");
        btnAddIProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddIProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(34, 34, 34)
                        .addComponent(txtCodBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sfQtde, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtVlrUnit))
                    .addComponent(btnAddIProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtVlrUnit)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel6)
                        .addComponent(cboProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCodBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10)
                    .addComponent(sfQtde, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddIProduto))
                .addContainerGap())
        );

        btnConfirmarItens.setFont(new java.awt.Font("Dialog", 0, 18));
        btnConfirmarItens.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Confirmar 22 x 22.png"))); // NOI18N
        btnConfirmarItens.setText("Confirmar");
        btnConfirmarItens.setToolTipText("Confirma o cliente");
        btnConfirmarItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarItensActionPerformed(evt);
            }
        });

        btnAddItem.setFont(new java.awt.Font("Dialog", 0, 18));
        btnAddItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Add 22 x 22.png"))); // NOI18N
        btnAddItem.setText("Adicionar Item");
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Dialog", 0, 18));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Remover 22 x 22.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnNovaVenda.setFont(new java.awt.Font("Dialog", 0, 18));
        btnNovaVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Novo 22 x 22.png"))); // NOI18N
        btnNovaVenda.setText("Nova Compra");
        btnNovaVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovaVendaActionPerformed(evt);
            }
        });

        PnInfoPgto.setBorder(javax.swing.BorderFactory.createTitledBorder("Informação de Pagamento"));

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel11.setText("Tipo de Pagamento:");

        cboTipoPgto.setFont(new java.awt.Font("Dialog", 0, 18));
        cboTipoPgto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dinheiro", "Cartão" }));
        cboTipoPgto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoPgtoActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel13.setText("Nº Parcelas:");

        sfNParc.setMinimum(1);
        sfNParc.setValue(1);
        sfNParc.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                sfNParcPropertyChange(evt);
            }
        });

        txtVlrParcela.setFont(new java.awt.Font("Dialog", 0, 18));
        txtVlrParcela.setText("0");
        txtVlrParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVlrParcelaActionPerformed(evt);
            }
        });
        txtVlrParcela.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtVlrParcelaPropertyChange(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel20.setText("Valor Parcela:");

        dtaVencto.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dtaVenctoPropertyChange(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel14.setText("Vencimento:");

        btnConfirmarVenda.setFont(new java.awt.Font("Dialog", 0, 18));
        btnConfirmarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Gravar 22 x 22.png"))); // NOI18N
        btnConfirmarVenda.setText("Confirmar Venda");
        btnConfirmarVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnConfirmarVendaMouseClicked(evt);
            }
        });
        btnConfirmarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarVendaActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel15.setText("Total:");

        txtTotal.setFont(new java.awt.Font("Dialog", 0, 18));
        txtTotal.setText("0");
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnInfoPgtoLayout = new javax.swing.GroupLayout(PnInfoPgto);
        PnInfoPgto.setLayout(PnInfoPgtoLayout);
        PnInfoPgtoLayout.setHorizontalGroup(
            PnInfoPgtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnInfoPgtoLayout.createSequentialGroup()
                .addGroup(PnInfoPgtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnInfoPgtoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PnInfoPgtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PnInfoPgtoLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboTipoPgto, 0, 135, Short.MAX_VALUE))
                            .addGroup(PnInfoPgtoLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(66, 66, 66)
                                .addComponent(sfNParc, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                            .addGroup(PnInfoPgtoLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(54, 54, 54)
                                .addComponent(txtVlrParcela, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                            .addGroup(PnInfoPgtoLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(68, 68, 68)
                                .addComponent(dtaVencto, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))))
                    .addGroup(PnInfoPgtoLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(btnConfirmarVenda))
                    .addGroup(PnInfoPgtoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel15)
                        .addGap(120, 120, 120)
                        .addComponent(txtTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PnInfoPgtoLayout.setVerticalGroup(
            PnInfoPgtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnInfoPgtoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnInfoPgtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(cboTipoPgto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PnInfoPgtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(sfNParc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PnInfoPgtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtVlrParcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PnInfoPgtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(dtaVencto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PnInfoPgtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btnConfirmarVenda))
        );

        JTableItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Barra", "Descrição", "Valor Unitario", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTableItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableItemsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTableItems);
        if (JTableItems.getColumnModel().getColumnCount() > 0) {
            JTableItems.getColumnModel().getColumn(0).setResizable(false);
            JTableItems.getColumnModel().getColumn(1).setResizable(false);
        }

        btnRemover.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagems/Excluir 22 x 22.png"))); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoverMouseClicked(evt);
            }
        });
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PnInfoFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PnInfoPgto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnNovaVenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConfirmarItens)
                        .addGap(41, 41, 41)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PnInfoFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddItem)
                    .addComponent(btnNovaVenda)
                    .addComponent(btnCancelar)
                    .addComponent(btnConfirmarItens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, 0, 0, Short.MAX_VALUE)
                    .addComponent(PnInfoPgto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(886, 688));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cboFornecedorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboFornecedorItemStateChanged
        
        
        
    }//GEN-LAST:event_cboFornecedorItemStateChanged

    private void cboFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFornecedorActionPerformed
               
        if(0 != cboFornecedor.getSelectedIndex()){
            dadosCboFornecedores();
        }

}//GEN-LAST:event_cboFornecedorActionPerformed

    private void btnConfirmarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarClienteActionPerformed
   
        if("Selecione um Fornecedor".equals(cboFornecedor.getSelectedItem()))
        {
            JOptionPane.showMessageDialog(null, "'Selecione um Fornecedor'" + "\n" + "Não é um fornecedor válido");             
        }
        
        else
        {
            AtivarDesativarControle(false, true, false); 
            btnCancelar.setEnabled(false);
            comprasDAO.ConfirmaCompraCab(compras);
            try
            {
                
                String sql = "select id from Compra_cab";
                PreparedStatement ps = this.conexao.prepareStatement(sql);
                ResultSet rst = ps.executeQuery();
                rst.last();
                txtIDCompra.setText(rst.getString("id"));
             
            }
            catch(SQLException err)
            {
                JOptionPane.showMessageDialog(null, "Erro ao puxar ID da Venda  " + err);
            }
                
        }
        
    }//GEN-LAST:event_btnConfirmarClienteActionPerformed

    private void btnConfirmarItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarItensActionPerformed

        AtivarDesativarControle(false,false,true);
        btnConfirmarItens.setEnabled(false);
        btnCancelar.setEnabled(true);
        btnConfirmarVenda.setEnabled(true);
}//GEN-LAST:event_btnConfirmarItensActionPerformed

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
       
           try
           {
                PreencherJTableItems();
                //Seta o local para a Moeda brasileira
                formater.setCurrency(Currency.getInstance(new Locale("pt", "BR")));
           
                //Remove a virgula da moeda brasileira, obrigatório passar para String
                String moeda = String.valueOf(formater.parse(txtVlrUnit.getText()));

                //Inicializa o Atributo qtde informando a quantidade 
                int qtde = sfQtde.getValue();
            
                compras.setQtdeEstoque(qtde);
                compras.setCod_barra(txtCodBarra.getText());
                comprasDAO.adicionaEstoque(compras);
                txtEstoque.setText(String.valueOf(consultarEstoque(txtCodBarra.getText())));
                
                //Passa a moeda para o formato Americano, para trabalhas com as contas
                Double vlrUnit = Double.parseDouble(moeda);
            
                
                total = total + (vlrUnit * qtde);
               
                /**Passa a moeda para o formato Brasileiro novamente, adcionando a virgula, conforme configurado
                * na classe DecimalFormat: DecimalFormat formater = new DecimalFormat("##0.00");
                */
                txtTotal.setText(String.valueOf(formater.format(total)));
                
                 
               
           } 
           catch (ParseException ex) 
           {
                Logger.getLogger(FrmCompras.class.getName()).log(Level.SEVERE, null, ex);
           } 
           
        
       
               
        
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        
        btnNovaVenda.setEnabled(true);
        btnAddItem.setEnabled(true);
        btnRemover.setEnabled(true);
        btnConfirmarItens.setEnabled(true);
        btnCancelar.setEnabled(false);

        
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNovaVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovaVendaActionPerformed

        if(!"".equals(txtIDCompra.getText()))
        {
            
            int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente abrir uma nova compra ?", "Nova Compra", JOptionPane.YES_NO_OPTION);
            
            if(resp == JOptionPane.YES_OPTION)
            {
            
                compras.setId_compra(Integer.parseInt(txtIDCompra.getText()));
                comprasDAO.cancelarComprasCab(compras);
                //limparCampos();
                total = 0;
                modelo.setRowCount(0);
                sfQtde.setValue(0);
                
            }
        }
        
        
    }//GEN-LAST:event_btnNovaVendaActionPerformed

    private void cboTipoPgtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoPgtoActionPerformed
        
 
        if(0 == cboTipoPgto.getSelectedIndex())
        {
            sfNParc.setEnabled(false);
            txtVlrParcela.setEnabled(false);
            dtaVencto.setEnabled(false);
            btnConfirmarVenda.setEnabled(true);
        }
        else if (1 == cboTipoPgto.getSelectedIndex())
        {
            sfNParc.setEnabled(true);
            txtVlrParcela.setEnabled(true);
            dtaVencto.setEnabled(true);   
            btnConfirmarVenda.setEnabled(false);
        }
}//GEN-LAST:event_cboTipoPgtoActionPerformed

    private void sfNParcPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_sfNParcPropertyChange

           double conta = (total / sfNParc.getValue());
           txtVlrParcela.setText(formater.format(conta));
       
}//GEN-LAST:event_sfNParcPropertyChange

    private void txtVlrParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVlrParcelaActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtVlrParcelaActionPerformed

    private void dtaVenctoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dtaVenctoPropertyChange
        btnConfirmarVenda.setEnabled(true);
}//GEN-LAST:event_dtaVenctoPropertyChange

    private void btnConfirmarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarVendaActionPerformed

    }//GEN-LAST:event_btnConfirmarVendaActionPerformed

    private void btnAddIProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddIProdutoActionPerformed
        // TODO add your handling code here:
        cboProdutos.removeAllItems();
        new CadastroProdutos().setVisible(true);
        
    }//GEN-LAST:event_btnAddIProdutoActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void btnConfirmarVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarVendaMouseClicked

       
        //DINHEIRO
        if(0 == cboTipoPgto.getSelectedIndex()){

            gravaCompraDet();
            compras.setId_fornecedor(Integer.parseInt(txtIDFornecedor.getText()));
            compras.setId_compra(Integer.parseInt(txtIDCompra.getText()));
            compras.setTipo_pgto("Dinheiro");
            compras.setTotal(total);
            compras.setStatusComprasCab("R");
            comprasDAO.atualizaCompraCab(compras);
            comprasDAO.confirmaFluxoCaixa(compras);
            JOptionPane.showMessageDialog(null, "Compra registrada com sucesso", "Compra", JOptionPane.INFORMATION_MESSAGE);
                     
            
            
            
        }
        
        //Cartão
        else
        {
            try {
                gravaCompraDet();
                
                int cont = sfNParc.getValue();
                
                Calendar ca = Calendar.getInstance();
                ca.setTime(dtaVencto.getDate());
                
                compras.setId_compra(Integer.parseInt(txtIDCompra.getText()));
                
                
                compras.setId_fornecedor(Integer.parseInt(txtIDFornecedor.getText()));
                //compras.setDataVenda(dtaDataAtual.getDate());
                compras.setTotal(Double.parseDouble(String.valueOf(formater.parse(txtTotal.getText()))));
                compras.setVlr_parc(Double.parseDouble(String.valueOf(formater.parse(txtVlrParcela.getText()))));
                compras.setStatusComprasCab("I");
                comprasDAO.atualizaCompraCab(compras);
                
                for (int i = 1; i <= cont; i++)
                {
                    
                     
                    compras.setNparc(i);
                    ca.add(Calendar.MONTH, 1);
                    compras.setDataVencto(ca.getTime());
                    comprasDAO.confirmaFluxoCaixaParcelas(compras);
                    
                    
                   
                }
                
                JOptionPane.showMessageDialog(null, "Compra registrada com sucesso", "Venda", JOptionPane.INFORMATION_MESSAGE);
                
            }
            
            
            
            catch (ParseException ex) 
            {
                Logger.getLogger(FrmCompras.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
                    
            
        }
        
        
        
        
        
    }//GEN-LAST:event_btnConfirmarVendaMouseClicked

    private void cboProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboProdutosActionPerformed

        //carregaCBOProdutos();
        dadosCBOProdutos();
    }//GEN-LAST:event_cboProdutosActionPerformed

    private void cboProdutosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboProdutosItemStateChanged
        
}//GEN-LAST:event_cboProdutosItemStateChanged

    private void cboProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboProdutosMouseClicked
        // TODO add your handling code here:
}//GEN-LAST:event_cboProdutosMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_formWindowActivated

    private void txtVlrParcelaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtVlrParcelaPropertyChange
        // TODO add your handling code here:
     
        
    }//GEN-LAST:event_txtVlrParcelaPropertyChange

    private void btnRemoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoverMouseClicked
       
        int[] l = JTableItems.getSelectedRows();
                    
                 DefaultTableModel dtm = (DefaultTableModel) JTableItems.getModel();
                 for (int i = (l.length - 1); i >= 0; --i) {
        
        
        
                        try {

                            modelo = (DefaultTableModel)JTableItems.getModel();
                            //Atributo utilizado para identificar o tipo da venda

                            int vlrUnit = Integer.parseInt(String.valueOf(formater.parse(String.valueOf(JTableItems.getModel().getValueAt(i, 2)))));
                            int qtde = Integer.parseInt(String.valueOf(JTableItems.getModel().getValueAt(i, 3)));
                            String codBarra = String.valueOf(JTableItems.getModel().getValueAt(i, 0));
                           
                            if(codBarra.isEmpty() == false)
                                    {                                                  
                                        compras.setQtdeEstoque(qtde);
                                        compras.setCod_barra(codBarra);
                                        comprasDAO.removerEstoque(compras);
                                        //SE O PRODUTO ESTIVER SELECIONADO NA TELA, ATUALIZA EM TEMPO REAL                                                    
                                        if(txtCodBarra.getText().equals(codBarra))
                                        {                                                        
                                            txtEstoque.setText(String.valueOf(consultarEstoque(codBarra)));                                                     
                                        }                                             
                                    }
                            
                            
                             
                            total = total - (vlrUnit * qtde);
                            txtTotal.setText(formater.format(total));
                                             
                        }catch(ParseException err){

                        }  
                        
                        dtm.removeRow(l[i]);//remove todas as linhas selecionadas
        
                 }
                            
    }//GEN-LAST:event_btnRemoverMouseClicked

    private void JTableItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableItemsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_JTableItemsMouseClicked

    private void txtCodBarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodBarraActionPerformed
        // TODO add your handling code here:
        try{

            this.conexao = Conexao.getConexao();
            String sql = "Select id, Cod_Barra, descricao, valor_venda, estoque from produtos where cod_barra = ?";
            PreparedStatement ps = this.conexao.prepareStatement(sql);
            ps.setString(1, txtCodBarra.getText());
            ResultSet rsts = ps.executeQuery();

            if(rsts.next()){

                cboProdutos.setModel(new javax.swing.DefaultComboBoxModel(new String[] {rsts.getString("descricao")}));
                txtEstoque.setText(rsts.getString("estoque"));
                txtVlrUnit.setText(String.valueOf(formater.format(rsts.getDouble("valor_venda"))));
                //txtEstoque.setEditable(false);
              

            }else{
                JOptionPane.showMessageDialog(null, "Produto não encontrado no sistema", "Erro", JOptionPane.INFORMATION_MESSAGE);
                txtCodBarra.setText("");
                txtCodBarra.grabFocus();
            }

        }catch(SQLException err){

        }
    }//GEN-LAST:event_txtCodBarraActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRemoverActionPerformed

    
     private void gravaCompraDet(){
         
  
        int totalLinhas = JTableItems.getModel().getRowCount();
        int linha = 0;
        
        try{
            
        for(int i = 0; i < totalLinhas; i++){
        
        
         compras.setQtdeEstoque(Integer.parseInt(String.valueOf(JTableItems.getModel().getValueAt(linha, 3)))); //é utilizado nos métodos removerEstoque e confirmaVendaDet
         compras.setCod_barra(String.valueOf(JTableItems.getModel().getValueAt(linha, 0)));
         compras.setId_compra(Integer.parseInt(txtIDCompra.getText()));
         compras.setVlr_unit(Double.parseDouble(String.valueOf(formater.parse(String.valueOf(JTableItems.getModel().getValueAt(linha, 2))))));
                     


                   
          
          comprasDAO.addCompraDet(compras);
          
          linha++;
          
        }//FIM FOR
                
    
        }catch(ParseException err){
        }
        
     }
     
     private int consultarEstoque(String codBarra){
         
         int es = 0;
         
         try{
           //Executa esta instrução para atualizar o atributo estoque
           String sql = "Select estoque, estoque_min from produtos where cod_barra = ?";
           PreparedStatement ps = this.conexao.prepareStatement(sql);
           ps.setString(1, codBarra);
           ResultSet rsts = ps.executeQuery();
           rsts.next();
           es = rsts.getInt("estoque");
           estMin = rsts.getInt("estoque_min");
           
         }catch(SQLException err){
           JOptionPane.showMessageDialog(null, "Erro ao consultar Estoque " + err);
         }
         
         return es;
     }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FrmCompras().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTableItems;
    private javax.swing.JPanel PnInfoFornecedor;
    private javax.swing.JPanel PnInfoPgto;
    private javax.swing.JButton btnAddIProduto;
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmarCliente;
    private javax.swing.JButton btnConfirmarItens;
    private javax.swing.JButton btnConfirmarVenda;
    private javax.swing.JButton btnNovaVenda;
    private javax.swing.JToggleButton btnRemover;
    private javax.swing.JComboBox cboFornecedor;
    private javax.swing.JComboBox cboProdutos;
    private javax.swing.JComboBox cboTipoPgto;
    private com.toedter.calendar.JDateChooser dtaDataAtual;
    private com.toedter.calendar.JDateChooser dtaVencto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.components.JSpinField sfNParc;
    private com.toedter.components.JSpinField sfQtde;
    private javax.swing.JTextField txtCodBarra;
    private javax.swing.JTextField txtEstoque;
    private javax.swing.JTextField txtIDCompra;
    private javax.swing.JTextField txtIDFornecedor;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtVlrParcela;
    private javax.swing.JTextField txtVlrUnit;
    // End of variables declaration//GEN-END:variables
}
